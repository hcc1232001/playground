{"version":3,"sources":["pages/fbxViewer.js","utils/vendor/orbitControls.js","media/models/190717_frying pan animationA(2).fbx"],"names":["FBXLoader","require","App","props","_useState","useState","scene","camera","containerEl","renderer","orbitControl","raycaster","clock","mixer","_useState2","Object","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","threeObjects","setThreeObjects","_useState3","_useState4","animatePan","setAnimatePan","animationFrame","useEffect","THREE","offsetWidth","offsetHeight","position","set","lookAt","updateProjectionMatrix","light","add","antialias","setPixelRatio","window","devicePixelRatio","setSize","setClearColor","appendChild","domElement","OrbitControls","maxDistance","loader","load","panAUrl","object","action","clipAction","animations","play","traverse","child","isMesh","castShadow","receiveShadow","prevThreeObjects","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","item","console","log","loaded","total","err","initScene","clearTimeout","setTimeout","update","prevAnimatePan","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","ref","onClick","className","style","height","this","undefined","document","enabled","target","Vector3","minDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","clone","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","dispatchEvent","changeEvent","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","panOffset","setFromSpherical","multiplyScalar","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","needsUpdate","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","module","exports","default","__webpack_require__","p"],"mappings":"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","file":"static/js/5.a7b1093e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'utils/vendor/orbitControls';\r\n// import {FBXLoader} from 'utils/vendor/FBXLoader';\r\n\r\n// import panAUrl from 'media/models/Windows for Building department breaking.fbx';\r\nimport panAUrl from 'media/models/190717_frying pan animationA(2).fbx';\r\n\r\n// import panFullSet from 'media/models/190715_CLP_game(7).fbx';\r\n\r\nconst FBXLoader = require('three-fbxloader-offical');\r\n\r\nconst App = (props) => {\r\n  const [threeObjects, setThreeObjects] = useState({\r\n    scene: null,\r\n    camera: null,\r\n    containerEl: null,\r\n    renderer: null,\r\n    orbitControl: null,\r\n    raycaster: null,\r\n    clock: null,\r\n    mixer: null,\r\n  });\r\n  const [animatePan, setAnimatePan] = useState(0);\r\n  let containerEl = null;\r\n  let animationFrame = null;\r\n\r\n  const setContainerEl = (ref) => containerEl = ref;\r\n  const initScene = () => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera( 50, containerEl.offsetWidth / containerEl.offsetHeight, 1, 1000 );\r\n    camera.position.set(500, 500, 250);\r\n    camera.lookAt(0, 0, 0);\r\n    camera.updateProjectionMatrix();\r\n    \r\n    const light = new THREE.DirectionalLight(0xFFFFFF, 1);\r\n    light.position.set(50, 100, 100);\r\n    scene.add(light);\r\n\r\n    const renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    renderer.setSize( containerEl.offsetWidth, containerEl.offsetHeight );\r\n    renderer.setClearColor( 0xcccccc, 1 );\r\n    containerEl.appendChild( renderer.domElement );\r\n\r\n    // add control\r\n    const orbitControl = new OrbitControls( camera, renderer.domElement );\r\n    // dampling\r\n    // orbitControl.enableDamping = true;\r\n    // orbitControl.dampingFactor = 0.05;\r\n    // // to cancel out the super fast rotation after enabled damping\r\n    // // orbitControl.enableRotate = false;\r\n    // orbitControl.rotateSpeed = 0.02;\r\n    // orbitControl.autoRotateSpeed = 0.05;\r\n    \r\n    /**\r\n     * limit the vertical rotation\r\n     * https://stackoverflow.com/questions/25308943/limit-orbitcontrols-horizontal-rotation/25311658#25311658\r\n     **/ \r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians\r\n    // orbitControl.minPolarAngle = Math.PI / 8;\r\n    // orbitControl.maxPolarAngle = Math.PI * 3 / 8;\r\n    // // How far you can orbit horizontally, upper and lower limits.\r\n    // // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    // orbitControl.minAzimuthAngle = Math.PI / 4;\r\n    // orbitControl.maxAzimuthAngle = Math.PI / 4; \r\n    \r\n    // // to disable zoom\r\n    // orbitControl.enableZoom = false;\r\n    // orbitControl.minDistance = 5;\r\n    // orbitControl.maxDistance = 5;\r\n    // to disable rotation\r\n    // orbitControl.enableRotate = false;\r\n    // to disable pan\r\n    // orbitControl.enablePan = false;\r\n    // orbitControl.panSpeed = 0.05;\r\n    // raycaster\r\n    const raycaster = new THREE.Raycaster(camera.position, new THREE.Vector3(0, 0, 0), 0, orbitControl.maxDistance * 2);\r\n\r\n    const clock = new THREE.Clock();\r\n\r\n    const loader = new FBXLoader();\r\n    let mixer = null;\r\n    loader.load(panAUrl, (object) => {\r\n      mixer = new THREE.AnimationMixer( object );\r\n      const action = mixer.clipAction( object.animations[ 0 ] );\r\n      // action.loop = THREE.LoopOnce;\r\n      // action.clampWhenFinished = true;\r\n      action.play();\r\n      object.traverse( function ( child ) {\r\n        if ( child.isMesh ) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      scene.add(object);\r\n      camera.lookAt(object);\r\n      setThreeObjects((prevThreeObjects) => {\r\n        return {\r\n          ...prevThreeObjects,\r\n          mixer: mixer,\r\n          action: action,\r\n        }\r\n      })\r\n    }, (item) => {\r\n      // console.log( item, loaded, total );\r\n      console.log(item.loaded / item.total * 100 + '%');\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n    \r\n    setThreeObjects({\r\n      scene: scene,\r\n      camera: camera,\r\n      containerEl: containerEl,\r\n      renderer: renderer,\r\n      orbitControl: orbitControl,\r\n      raycaster: raycaster,\r\n      clock: clock,\r\n    })\r\n  }\r\n  const update = () => {\r\n    animationFrame = setTimeout(() => update(), 1000 / 30);\r\n    const delta = 1 / 30;//threeObjects.clock.getDelta();\r\n    if (threeObjects.mixer && animatePan > 0) {\r\n      setAnimatePan((prevAnimatePan) => {\r\n        return prevAnimatePan - 1;\r\n      });\r\n      threeObjects.mixer.update(delta);\r\n    }\r\n    threeObjects.orbitControl.update();\r\n    threeObjects.renderer.render( threeObjects.scene, threeObjects.camera );\r\n  };\r\n  const doPanAnimation = () => {\r\n    setAnimatePan((prevAnimatePan) => {\r\n      return prevAnimatePan + 18;\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    initScene();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (animationFrame)\r\n      // cancelAnimationFrame(animationFrame);\r\n      clearTimeout(animationFrame);\r\n    // console.log(threeObjects);\r\n    if (threeObjects.scene) {\r\n      animationFrame = setTimeout(() => update(), 1000 / 30);//update();\r\n    }\r\n    return () => {\r\n      if (animationFrame)\r\n        // cancelAnimationFrame(animationFrame);\r\n        clearTimeout(animationFrame);\r\n    }\r\n  }, [threeObjects, animatePan]);\r\n  return <div ref={setContainerEl}\r\n    onClick={doPanAnimation}\r\n    className=\"threeCanvas\"\r\n    style={{\r\n      height: '100vh',\r\n    }}>\r\n  </div>;\r\n}\r\n\r\nexport default App;","/* three-orbitcontrols addendum */\r\nvar THREE = require('three');\r\n/**\r\n * @author qiao / https://github.com/qiao\r\n * @author mrdoob / http://mrdoob.com\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author erich666 / http://erichaines.com\r\n */\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\n\r\nTHREE.OrbitControls = function (object, domElement) {\r\n  this.object = object;\r\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\r\n\r\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\r\n\r\n  this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\r\n\r\n  this.minDistance = 0;\r\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\r\n\r\n  this.minZoom = 0;\r\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\r\n  // Range is 0 to Math.PI radians.\r\n\r\n  this.minPolarAngle = 0; // radians\r\n\r\n  this.maxPolarAngle = Math.PI; // radians\r\n  // How far you can orbit horizontally, upper and lower limits.\r\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n\r\n  this.minAzimuthAngle = -Infinity; // radians\r\n\r\n  this.maxAzimuthAngle = Infinity; // radians\r\n  // Set to true to enable damping (inertia)\r\n  // If damping is enabled, you must call controls.update() in your animation loop\r\n\r\n  this.enableDamping = false;\r\n  this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n  // Set to false to disable zooming\r\n\r\n  this.enableZoom = true;\r\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\r\n\r\n  this.enableRotate = true;\r\n  this.rotateSpeed = 1.0; // Set to false to disable panning\r\n\r\n  this.enablePan = true;\r\n  this.panSpeed = 1.0;\r\n  this.screenSpacePanning = false; // if true, pan in screen-space\r\n\r\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n  // Set to true to automatically rotate around the target\r\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\r\n  this.autoRotate = false;\r\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n  // Set to false to disable use of the keys\r\n\r\n  this.enableKeys = true; // The four arrow keys\r\n\r\n  this.keys = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    BOTTOM: 40\r\n  }; // Mouse buttons\r\n\r\n  this.mouseButtons = {\r\n    LEFT: THREE.MOUSE.LEFT,\r\n    MIDDLE: THREE.MOUSE.MIDDLE,\r\n    RIGHT: THREE.MOUSE.RIGHT\r\n  }; // for reset\r\n\r\n  this.target0 = this.target.clone();\r\n  this.position0 = this.object.position.clone();\r\n  this.zoom0 = this.object.zoom; //\r\n  // public methods\r\n  //\r\n\r\n  this.getPolarAngle = function () {\r\n    return spherical.phi;\r\n  };\r\n\r\n  this.getAzimuthalAngle = function () {\r\n    return spherical.theta;\r\n  };\r\n\r\n  this.saveState = function () {\r\n    scope.target0.copy(scope.target);\r\n    scope.position0.copy(scope.object.position);\r\n    scope.zoom0 = scope.object.zoom;\r\n  };\r\n\r\n  this.reset = function () {\r\n    scope.target.copy(scope.target0);\r\n    scope.object.position.copy(scope.position0);\r\n    scope.object.zoom = scope.zoom0;\r\n    scope.object.updateProjectionMatrix();\r\n    scope.dispatchEvent(changeEvent);\r\n    scope.update();\r\n    state = STATE.NONE;\r\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\r\n\r\n\r\n  this.update = function () {\r\n    var offset = new THREE.Vector3(); // so camera.up is the orbit axis\r\n\r\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\r\n    var quatInverse = quat.clone().inverse();\r\n    var lastPosition = new THREE.Vector3();\r\n    var lastQuaternion = new THREE.Quaternion();\r\n    return function update() {\r\n      var position = scope.object.position;\r\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\r\n\r\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\r\n\r\n      spherical.setFromVector3(offset);\r\n\r\n      if (scope.autoRotate && state === STATE.NONE) {\r\n        rotateLeft(getAutoRotationAngle());\r\n      }\r\n\r\n      spherical.theta += sphericalDelta.theta;\r\n      spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\r\n\r\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\r\n\r\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\r\n      spherical.makeSafe();\r\n      spherical.radius *= scale; // restrict radius to be between desired limits\r\n\r\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\r\n\r\n      scope.target.add(panOffset);\r\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\r\n\r\n      offset.applyQuaternion(quatInverse);\r\n      position.copy(scope.target).add(offset);\r\n      scope.object.lookAt(scope.target);\r\n\r\n      if (scope.enableDamping === true) {\r\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\r\n      } else {\r\n        sphericalDelta.set(0, 0, 0);\r\n        panOffset.set(0, 0, 0);\r\n      }\r\n\r\n      scale = 1; // update condition is:\r\n      // min(camera displacement, camera rotation in radians)^2 > EPS\r\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\r\n        scope.dispatchEvent(changeEvent);\r\n        lastPosition.copy(scope.object.position);\r\n        lastQuaternion.copy(scope.object.quaternion);\r\n        zoomChanged = false;\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n  }();\r\n\r\n  this.dispose = function () {\r\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\r\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\r\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\r\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\r\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\r\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\r\n    document.removeEventListener('mousemove', onMouseMove, false);\r\n    document.removeEventListener('mouseup', onMouseUp, false);\r\n    window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n  }; //\r\n  // internals\r\n  //\r\n\r\n\r\n  var scope = this;\r\n  var changeEvent = {\r\n    type: 'change'\r\n  };\r\n  var startEvent = {\r\n    type: 'start'\r\n  };\r\n  var endEvent = {\r\n    type: 'end'\r\n  };\r\n  var STATE = {\r\n    NONE: -1,\r\n    ROTATE: 0,\r\n    DOLLY: 1,\r\n    PAN: 2,\r\n    TOUCH_ROTATE: 3,\r\n    TOUCH_DOLLY_PAN: 4\r\n  };\r\n  var state = STATE.NONE;\r\n  var EPS = 0.000001; // current position in spherical coordinates\r\n\r\n  var spherical = new THREE.Spherical();\r\n  var sphericalDelta = new THREE.Spherical();\r\n  var scale = 1;\r\n  var panOffset = new THREE.Vector3();\r\n  var zoomChanged = false;\r\n  var rotateStart = new THREE.Vector2();\r\n  var rotateEnd = new THREE.Vector2();\r\n  var rotateDelta = new THREE.Vector2();\r\n  var panStart = new THREE.Vector2();\r\n  var panEnd = new THREE.Vector2();\r\n  var panDelta = new THREE.Vector2();\r\n  var dollyStart = new THREE.Vector2();\r\n  var dollyEnd = new THREE.Vector2();\r\n  var dollyDelta = new THREE.Vector2();\r\n\r\n  function getAutoRotationAngle() {\r\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n  }\r\n\r\n  function getZoomScale() {\r\n    return Math.pow(0.95, scope.zoomSpeed);\r\n  }\r\n\r\n  function rotateLeft(angle) {\r\n    sphericalDelta.theta -= angle;\r\n  }\r\n\r\n  function rotateUp(angle) {\r\n    sphericalDelta.phi -= angle;\r\n  }\r\n\r\n  var panLeft = function () {\r\n    var v = new THREE.Vector3();\r\n    return function panLeft(distance, objectMatrix) {\r\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n\r\n      v.multiplyScalar(-distance);\r\n      panOffset.add(v);\r\n    };\r\n  }();\r\n\r\n  var panUp = function () {\r\n    var v = new THREE.Vector3();\r\n    return function panUp(distance, objectMatrix) {\r\n      if (scope.screenSpacePanning === true) {\r\n        v.setFromMatrixColumn(objectMatrix, 1);\r\n      } else {\r\n        v.setFromMatrixColumn(objectMatrix, 0);\r\n        v.crossVectors(scope.object.up, v);\r\n      }\r\n\r\n      v.multiplyScalar(distance);\r\n      panOffset.add(v);\r\n    };\r\n  }(); // deltaX and deltaY are in pixels; right and down are positive\r\n\r\n\r\n  var pan = function () {\r\n    var offset = new THREE.Vector3();\r\n    return function pan(deltaX, deltaY) {\r\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n\r\n      if (scope.object.isPerspectiveCamera) {\r\n        // perspective\r\n        var position = scope.object.position;\r\n        offset.copy(position).sub(scope.target);\r\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\r\n\r\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\r\n\r\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\r\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\r\n      } else if (scope.object.isOrthographicCamera) {\r\n        // orthographic\r\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\r\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\r\n      } else {\r\n        // camera neither orthographic nor perspective\r\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\r\n        scope.enablePan = false;\r\n      }\r\n    };\r\n  }();\r\n\r\n  function dollyIn(dollyScale) {\r\n    if (scope.object.isPerspectiveCamera) {\r\n      scale /= dollyScale;\r\n    } else if (scope.object.isOrthographicCamera) {\r\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\r\n      scope.object.updateProjectionMatrix();\r\n      zoomChanged = true;\r\n    } else {\r\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\r\n      scope.enableZoom = false;\r\n    }\r\n  }\r\n\r\n  function dollyOut(dollyScale) {\r\n    if (scope.object.isPerspectiveCamera) {\r\n      scale *= dollyScale;\r\n    } else if (scope.object.isOrthographicCamera) {\r\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\r\n      scope.object.updateProjectionMatrix();\r\n      zoomChanged = true;\r\n    } else {\r\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\r\n      scope.enableZoom = false;\r\n    }\r\n  } //\r\n  // event callbacks - update the object state\r\n  //\r\n\r\n\r\n  function handleMouseDownRotate(event) {\r\n    //console.log( 'handleMouseDownRotate' );\r\n    rotateStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseDownDolly(event) {\r\n    //console.log( 'handleMouseDownDolly' );\r\n    dollyStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseDownPan(event) {\r\n    //console.log( 'handleMouseDownPan' );\r\n    panStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseMoveRotate(event) {\r\n    //console.log( 'handleMouseMoveRotate' );\r\n    rotateEnd.set(event.clientX, event.clientY);\r\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\r\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\r\n\r\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\r\n    rotateStart.copy(rotateEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseMoveDolly(event) {\r\n    //console.log( 'handleMouseMoveDolly' );\r\n    dollyEnd.set(event.clientX, event.clientY);\r\n    dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n    if (dollyDelta.y > 0) {\r\n      dollyIn(getZoomScale());\r\n    } else if (dollyDelta.y < 0) {\r\n      dollyOut(getZoomScale());\r\n    }\r\n\r\n    dollyStart.copy(dollyEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseMovePan(event) {\r\n    //console.log( 'handleMouseMovePan' );\r\n    panEnd.set(event.clientX, event.clientY);\r\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\r\n    pan(panDelta.x, panDelta.y);\r\n    panStart.copy(panEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseUp(event) {// console.log( 'handleMouseUp' );\r\n  }\r\n\r\n  function handleMouseWheel(event) {\r\n    // console.log( 'handleMouseWheel' );\r\n    if (event.deltaY < 0) {\r\n      dollyOut(getZoomScale());\r\n    } else if (event.deltaY > 0) {\r\n      dollyIn(getZoomScale());\r\n    }\r\n\r\n    scope.update();\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    // console.log( 'handleKeyDown' );\r\n    var needsUpdate = false;\r\n\r\n    switch (event.keyCode) {\r\n      case scope.keys.UP:\r\n        pan(0, scope.keyPanSpeed);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.BOTTOM:\r\n        pan(0, -scope.keyPanSpeed);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.LEFT:\r\n        pan(scope.keyPanSpeed, 0);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.RIGHT:\r\n        pan(-scope.keyPanSpeed, 0);\r\n        needsUpdate = true;\r\n        break;\r\n    }\r\n\r\n    if (needsUpdate) {\r\n      // prevent the browser from scrolling on cursor keys\r\n      event.preventDefault();\r\n      scope.update();\r\n    }\r\n  }\r\n\r\n  function handleTouchStartRotate(event) {\r\n    //console.log( 'handleTouchStartRotate' );\r\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n  }\r\n\r\n  function handleTouchStartDollyPan(event) {\r\n    //console.log( 'handleTouchStartDollyPan' );\r\n    if (scope.enableZoom) {\r\n      var dx = event.touches[0].pageX; // - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY; // - event.touches[1].pageY;\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    if (scope.enablePan) {\r\n      var x = 0.5 * (event.touches[0].pageX); // + event.touches[1].pageX);\r\n      var y = 0.5 * (event.touches[0].pageY); // + event.touches[1].pageY);\r\n      panStart.set(x, y);\r\n    }\r\n  }\r\n\r\n  function handleTouchMoveRotate(event) {\r\n    //console.log( 'handleTouchMoveRotate' );\r\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\r\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\r\n\r\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\r\n    rotateStart.copy(rotateEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleTouchMoveDollyPan(event) {\r\n    //console.log( 'handleTouchMoveDollyPan' );\r\n    if (scope.enableZoom) {\r\n      var dx = event.touches[0].pageX; // - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY; // - event.touches[1].pageY;\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n      dollyEnd.set(0, distance);\r\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\r\n      dollyIn(dollyDelta.y);\r\n      dollyStart.copy(dollyEnd);\r\n    }\r\n\r\n    if (scope.enablePan) {\r\n      var x = 0.5 * (event.touches[0].pageX); // + event.touches[1].pageX);\r\n      var y = 0.5 * (event.touches[0].pageY); // + event.touches[1].pageY);\r\n      panEnd.set(x, y);\r\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\r\n      pan(panDelta.x, panDelta.y);\r\n      panStart.copy(panEnd);\r\n    }\r\n\r\n    scope.update();\r\n  }\r\n\r\n  function handleTouchEnd(event) {} //console.log( 'handleTouchEnd' );\r\n  //\r\n  // event handlers - FSM: listen for events and reset state\r\n  //\r\n\r\n\r\n  function onMouseDown(event) {\r\n    if (scope.enabled === false) return; // Prevent the browser from scrolling.\r\n\r\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\r\n    // prevents the browser from setting it automatically.\r\n\r\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\r\n\r\n    switch (event.button) {\r\n      case scope.mouseButtons.LEFT:\r\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\r\n          if (scope.enablePan === false) return;\r\n          handleMouseDownPan(event);\r\n          state = STATE.PAN;\r\n        } else {\r\n          if (scope.enableRotate === false) return;\r\n          handleMouseDownRotate(event);\r\n          state = STATE.ROTATE;\r\n        }\r\n\r\n        break;\r\n\r\n      case scope.mouseButtons.MIDDLE:\r\n        if (scope.enableZoom === false) return;\r\n        handleMouseDownDolly(event);\r\n        state = STATE.DOLLY;\r\n        break;\r\n\r\n      case scope.mouseButtons.RIGHT:\r\n        if (scope.enablePan === false) return;\r\n        handleMouseDownPan(event);\r\n        state = STATE.PAN;\r\n        break;\r\n    }\r\n\r\n    if (state !== STATE.NONE) {\r\n      document.addEventListener('mousemove', onMouseMove, false);\r\n      document.addEventListener('mouseup', onMouseUp, false);\r\n      scope.dispatchEvent(startEvent);\r\n    }\r\n  }\r\n\r\n  function onMouseMove(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n\r\n    switch (state) {\r\n      case STATE.ROTATE:\r\n        if (scope.enableRotate === false) return;\r\n        handleMouseMoveRotate(event);\r\n        break;\r\n\r\n      case STATE.DOLLY:\r\n        if (scope.enableZoom === false) return;\r\n        handleMouseMoveDolly(event);\r\n        break;\r\n\r\n      case STATE.PAN:\r\n        if (scope.enablePan === false) return;\r\n        handleMouseMovePan(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onMouseUp(event) {\r\n    if (scope.enabled === false) return;\r\n    handleMouseUp(event);\r\n    document.removeEventListener('mousemove', onMouseMove, false);\r\n    document.removeEventListener('mouseup', onMouseUp, false);\r\n    scope.dispatchEvent(endEvent);\r\n    state = STATE.NONE;\r\n  }\r\n\r\n  function onMouseWheel(event) {\r\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    scope.dispatchEvent(startEvent);\r\n    handleMouseWheel(event);\r\n    scope.dispatchEvent(endEvent);\r\n  }\r\n\r\n  function onKeyDown(event) {\r\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\r\n    handleKeyDown(event);\r\n  }\r\n\r\n  function onTouchStart(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n\r\n    switch (event.touches.length) {\r\n      case 2:\r\n        // two-fingered touch: rotate\r\n        if (scope.enableRotate === false) return;\r\n        handleTouchStartRotate(event);\r\n        state = STATE.TOUCH_ROTATE;\r\n        break;\r\n\r\n      case 1:\r\n        // one-fingered touch: dolly-pan\r\n        if (scope.enableZoom === false && scope.enablePan === false) return;\r\n        handleTouchStartDollyPan(event);\r\n        state = STATE.TOUCH_DOLLY_PAN;\r\n        break;\r\n\r\n      default:\r\n        state = STATE.NONE;\r\n    }\r\n\r\n    if (state !== STATE.NONE) {\r\n      scope.dispatchEvent(startEvent);\r\n    }\r\n  }\r\n\r\n  function onTouchMove(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    switch (event.touches.length) {\r\n      case 2:\r\n        // two-fingered touch: rotate\r\n        if (scope.enableRotate === false) return;\r\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\r\n\r\n        handleTouchMoveRotate(event);\r\n        break;\r\n\r\n      case 1:\r\n        // one-fingered touch: dolly-pan\r\n        if (scope.enableZoom === false && scope.enablePan === false) return;\r\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\r\n\r\n        handleTouchMoveDollyPan(event);\r\n        break;\r\n\r\n      default:\r\n        state = STATE.NONE;\r\n    }\r\n  }\r\n\r\n  function onTouchEnd(event) {\r\n    if (scope.enabled === false) return;\r\n    handleTouchEnd(event);\r\n    scope.dispatchEvent(endEvent);\r\n    state = STATE.NONE;\r\n  }\r\n\r\n  function onContextMenu(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n  } //\r\n\r\n\r\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\r\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\r\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\r\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\r\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\r\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\r\n  window.addEventListener('keydown', onKeyDown, false); // force an update at start\r\n\r\n  this.update();\r\n};\r\n\r\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\r\nObject.defineProperties(THREE.OrbitControls.prototype, {\r\n  center: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\r\n      return this.target;\r\n    }\r\n  },\r\n  // backward compatibility\r\n  noZoom: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\r\n      return !this.enableZoom;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\r\n      this.enableZoom = !value;\r\n    }\r\n  },\r\n  noRotate: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\r\n      return !this.enableRotate;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\r\n      this.enableRotate = !value;\r\n    }\r\n  },\r\n  noPan: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\r\n      return !this.enablePan;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\r\n      this.enablePan = !value;\r\n    }\r\n  },\r\n  noKeys: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\r\n      return !this.enableKeys;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\r\n      this.enableKeys = !value;\r\n    }\r\n  },\r\n  staticMoving: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\r\n      return !this.enableDamping;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\r\n      this.enableDamping = !value;\r\n    }\r\n  },\r\n  dynamicDampingFactor: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\r\n      return this.dampingFactor;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\r\n      this.dampingFactor = value;\r\n    }\r\n  }\r\n});\r\n/* three-orbitcontrols addendum */\r\n\r\nmodule.exports = exports.default = THREE.OrbitControls;","module.exports = __webpack_public_path__ + \"static/media/190717_frying pan animationA(2).c4bb87c7.fbx\";"],"sourceRoot":""}