{"version":3,"sources":["pages/joinGame.js","components/useDeviceMotion.js"],"names":["App","props","_useState","useState","_useState2","Object","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","socket","setSocket","_useState3","_useState4","useEffect","serverUrl","concat","io","on","console","log","emit","match","params","userId","msg","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_useDeviceMotion__WEBPACK_IMPORTED_MODULE_3__","onShake","useDeviceMotion","threshold","setThreshold","lastAccVec3","setLastAccVec3","_useState5","_useState6","moveCounter","setMoveCounter","window","addEventListener","onMotion","removeEventListener","event","alpha","beta","gamma","deltaX","Math","abs","deltaY","deltaZ","prevMoveCounter","max","map","v"],"mappings":"qJA+CeA,UAtCH,SAACC,GAAU,IAAAC,EACOC,mBAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACNI,EADMJ,EAAA,GAAAK,EAEiBN,mBAAS,IAF1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAIrBC,oBAAU,WAIR,IAAMC,EAAS,GAAAC,OAXA,yCAWA,KAAAA,OAVA,KAWTN,EAASO,IAAGF,GAElB,OADAJ,EAAUD,GACH,cAGN,IAEHI,oBAAU,WACJJ,IACFA,EAAOQ,GAAG,UAAW,WACnBC,QAAQC,IAAI,eACZV,EAAOW,KAAK,WAAYjB,EAAMkB,MAAMA,MAAMC,OAAOC,UAEnDd,EAAOQ,GAAG,IAAK,SAACO,GACdN,QAAQC,IAAIK,OAGf,CAACf,IAIJ,OAAOgB,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,QAJH,eAGT,aAIJ1B,EAAMkB,MAAMA,MAAMC,OAAOC,yFC4BfO,IAlES,SAAC3B,GAAU,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1B2B,EAD0BzB,EAAA,GACf0B,EADe1B,EAAA,GAAAK,EAEKN,mBAAS,CAAC,KAAM,KAAM,OAF3BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAE1BsB,EAF0BrB,EAAA,GAEbsB,EAFatB,EAAA,GAAAuB,EAGK9B,mBAAS,GAHd+B,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAG1BE,EAH0BD,EAAA,GAGbE,EAHaF,EAAA,GAIjCvB,oBAAU,WAIR,OAHIV,EAAM4B,WACRC,EAAa7B,EAAM4B,WAEd,cAGN,IAEHlB,oBAAU,WAGR,OAFA0B,OAAOC,iBAAiB,oBAAqBC,GAAU,GAEhD,WACLF,OAAOG,oBAAoB,oBAAqBD,GAAU,KAG3D,CAACV,EAAWE,IAEfpB,oBAAU,WACLwB,EAAc,IACfnB,QAAQC,IAAI,YACRhB,EAAM0B,SAAqC,oBAAnB1B,EAAM0B,SAChC1B,EAAM0B,UAEXS,EAAe,KAEb,CAACD,IAEJ,IAAMI,EAAW,SAACE,GAAU,IAInBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MAQpB,GAAMF,GAASC,GAAQC,EAAvB,CACA,IAAIC,EAASC,KAAKC,IAAIL,EAAQX,EAAY,IACtCiB,EAASF,KAAKC,IAAIJ,EAAOZ,EAAY,IACrCkB,EAASH,KAAKC,IAAIH,EAAQb,EAAY,IAGxCK,EADCS,EAASG,EAASC,EAASpB,EACb,SAACqB,GACd,OAAOA,EAAkB,GAGZ,SAACA,GACd,OAAOJ,KAAKK,IAAI,EAAGD,EAAkB,KAGzClB,EAAe,CAACU,EAAOC,EAAMC,MAG/B,OAAOrB,EAAAC,EAAAC,cAAA,WACJM,EAAYqB,IAAI,SAAAC,GAAC,OAAIA,EAAI","file":"static/js/4.10de6235.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport UseDeviceMotion from 'components/useDeviceMotion';\r\n\r\nconst serverPath = 'https://socketio-testing.herokuapp.com';\r\nconst serverPort = 443;\r\n\r\nconst App = (props) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [playersInfo, setPlayersInfo] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // const serverPath = 'http://localhost';\r\n    // get the ip and port from ipc\r\n    // const socket = io(window.location.origin);\r\n    const serverUrl = `${serverPath}:${serverPort}`;\r\n    const socket = io(serverUrl);\r\n    setSocket(socket);\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('connect', () => {\r\n        console.log('connected !');\r\n        socket.emit('joinRoom', props.match.match.params.userId);\r\n      });\r\n      socket.on('*', (msg) => {\r\n        console.log(msg);\r\n      })\r\n    }\r\n  }, [socket]);\r\n  const onShake = () => {\r\n    /* send signal to server */\r\n  }\r\n  return <div>\r\n    <UseDeviceMotion onShake={onShake} />\r\n    Join Game!\r\n    {/* JSON.stringify(props) */}\r\n    {props.match.match.params.userId}\r\n  </div>;\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\n\r\n\r\n// https://www.raymondcamden.com/2017/04/25/using-device-motion-on-the-web\r\nconst useDeviceMotion = (props) => {\r\n  const [threshold, setThreshold] = useState(45);\r\n  const [lastAccVec3, setLastAccVec3] = useState([null, null, null]);\r\n  const [moveCounter, setMoveCounter] = useState(0);\r\n  useEffect(() => {\r\n    if (props.threshold) {\r\n      setThreshold(props.threshold);\r\n    }\r\n    return () => {\r\n\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('deviceorientation', onMotion, false);\r\n    // console.log('addEventListener deviceorientation');\r\n    return () => {\r\n      window.removeEventListener('deviceorientation', onMotion, false);\r\n      // console.log('removeEventListener deviceorientation');\r\n    }\r\n  }, [threshold, lastAccVec3])\r\n\r\n  useEffect(() => {\r\n    if(moveCounter > 2) {\r\n      console.log('SHAKE!!!');\r\n      if (props.onShake && typeof(props.onShake) === 'function') {\r\n        props.onShake();\r\n      }\r\n\t\t\tsetMoveCounter(0);\r\n\t\t}\r\n  }, [moveCounter])\r\n\r\n  const onMotion = (event) => {\r\n    // event.alpha\r\n    // event.beta\r\n    // event.gamma\r\n    const {alpha, beta, gamma} = event;\r\n    //console.log('motion', acc);\r\n    // if (lastAccVec3[0] === null) {\r\n    //   setLastAccVec3([alpha, beta, gamma]);\r\n    //   return;\r\n    // }\r\n    // dunno why there exist some wrong result\r\n    //  - alpha, bata, gamma all zero randomly\r\n    if (!(alpha && beta && gamma)) { return; }\r\n    let deltaX = Math.abs(alpha - lastAccVec3[0]);\r\n    let deltaY = Math.abs(beta - lastAccVec3[1]);\r\n    let deltaZ = Math.abs(gamma - lastAccVec3[2]);\r\n  \r\n    if(deltaX + deltaY + deltaZ > threshold) {\r\n      setMoveCounter((prevMoveCounter) => {\r\n        return prevMoveCounter + 1;\r\n      })\r\n    } else {\r\n      setMoveCounter((prevMoveCounter) => {\r\n        return Math.max(0, prevMoveCounter - 1);\r\n      })\r\n    }\r\n    setLastAccVec3([alpha, beta, gamma]);\r\n  }\r\n\r\n  return <div>\r\n    {lastAccVec3.map(v => v + ', ')}\r\n  </div>;\r\n}\r\n\r\nexport default useDeviceMotion;"],"sourceRoot":""}