{"version":3,"sources":["pages/homePage.js"],"names":["App","props","_useState","useState","_useState2","Object","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","socket","setSocket","_useState3","_useState4","playersInfo","setPlayersInfo","useEffect","serverUrl","concat","io","on","console","log","emit","_loop","i","playerIdx","playerInfo","QRCode","toDataURL","width","color","dark","light","then","url","prevPlayersInfo","newPlayerInfo","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","img","length","msg","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","joined","key","href","target","src"],"mappings":"+KAmFeA,UAvEH,SAACC,GAAU,IAAAC,EACOC,mBAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACNI,EADMJ,EAAA,GAAAK,EAEiBN,mBAAS,IAF1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEdE,EAFcD,EAAA,GAEDE,EAFCF,EAAA,GAyDrB,OAtDAG,oBAAU,WAIR,IAAMC,EAAS,GAAAC,OAVA,yCAUA,KAAAA,OATA,KAUTR,EAASS,IAAGF,GAElB,OADAN,EAAUD,GACH,cAGN,IACHM,oBAAU,WACJN,IACFA,EAAOU,GAAG,UAAW,WACnBC,QAAQC,IAAI,eACZZ,EAAOa,KAAK,gBAEdb,EAAOU,GAAG,cAAe,SAACN,GAExBO,QAAQC,IAAIR,GAEZ,IAJwC,IAAAU,EAAA,SAI/BC,GACP,IAAMC,EAAYD,EACZE,EAAab,EAAYY,GAC/BE,IAAOC,UAEL,4BAA8BF,EAAU,SACxC,CACEG,MAAO,IACPC,MAAO,CACLC,KAAM,YACNC,MAAO,eAIZC,KAAK,SAAAC,GACJpB,EAAe,SAACqB,GACd,IAAMC,EAAa7B,OAAA8B,EAAA,EAAA9B,CAAO4B,GAK1B,OAJAC,EAAcX,GAAa,CACzBS,IAAK,4BAA8BR,EAAU,SAC7CY,IAAKJ,GAEAE,OArBJZ,EAAI,EAAGA,EAAIX,EAAY0B,OAAQf,IAAKD,EAApCC,KA2BXf,EAAOU,GAAG,IAAK,SAACqB,GACdpB,QAAQC,IAAImB,OAGf,CAAC/B,IAEGgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEnB/B,EAAYgC,IAAI,SAAAnB,GACf,IAAKA,EAAWoB,OACd,OAAOL,EAAAC,EAAAC,cAAA,OAAKI,IAAKrB,EAAU,IAASkB,UAAU,gBAC5CH,EAAAC,EAAAC,cAAA,KAAGK,KAAMtB,EAAU,IAASuB,OAAO,UACjCR,EAAAC,EAAAC,cAAA,OAAKO,IAAKxB,EAAU","file":"static/js/2.eef77da4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\n// import UseDeviceMotion from 'components/useDeviceMotion';\r\nimport QRCode from 'qrcode';\r\n\r\nimport './homePage.css';\r\n\r\nconst serverPath = 'https://socketio-testing.herokuapp.com';\r\nconst serverPort = 443;\r\n\r\nconst App = (props) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [playersInfo, setPlayersInfo] = useState([]);\r\n  useEffect(() => {\r\n    // const serverPath = 'http://localhost';\r\n    // get the ip and port from ipc\r\n    // const socket = io(window.location.origin);\r\n    const serverUrl = `${serverPath}:${serverPort}`;\r\n    const socket = io(serverUrl);\r\n    setSocket(socket);\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('connect', () => {\r\n        console.log('connected !');\r\n        socket.emit('createRoom');\r\n      });\r\n      socket.on('playersInfo', (playersInfo) => {\r\n        // setPlayerCount(count);\r\n        console.log(playersInfo);\r\n        // const playersInfo = [];\r\n        for (let i = 0; i < playersInfo.length; i++) {\r\n          const playerIdx = i;\r\n          const playerInfo = playersInfo[playerIdx];\r\n          QRCode.toDataURL(\r\n            // 'https://hcc1232001.github.io/playground/#/' + playerInfo['playerId'],\r\n            'http://10.0.1.111:3001/#/' + playerInfo['playerId'],\r\n            {\r\n              width: 300,\r\n              color: {\r\n                dark: '#000000FF',\r\n                light: '#FFFFFFFF'\r\n              }\r\n            }\r\n          )\r\n          .then(url => {\r\n            setPlayersInfo((prevPlayersInfo) => {\r\n              const newPlayerInfo = [...prevPlayersInfo];\r\n              newPlayerInfo[playerIdx] = {\r\n                url: 'http://10.0.1.111:3001/#/' + playerInfo['playerId'],\r\n                img: url\r\n              };\r\n              return newPlayerInfo;\r\n            })\r\n            // this.qrcodeImage[idx][platform].setAttribute('src', url);\r\n          })\r\n        }\r\n      })\r\n      socket.on('*', (msg) => {\r\n        console.log(msg);\r\n      })\r\n    }\r\n  }, [socket]);\r\n\r\n  return <div className=\"page homePage\">\r\n    {/* display the box of the player recieved from server */}\r\n    {playersInfo.map(playerInfo => {\r\n      if (!playerInfo.joined) {\r\n        return <div key={playerInfo['url']} className=\"player-block\">\r\n          <a href={playerInfo['url']} target=\"_blank\">\r\n            <img src={playerInfo['img']} />\r\n          </a>\r\n        </div>\r\n      }\r\n    })}\r\n  </div>;\r\n}\r\n\r\nexport default App;"],"sourceRoot":""}