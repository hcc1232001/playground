{"version":3,"sources":["media/models/190715_CLP_game(8).fbx","media/models/190717_frying pan animationA_shake.fbx","media/models/190717_frying pan animationA_flip.fbx","media/textures/meat.png","media/textures/mid_meat.png","media/textures/welldone_meat.png","utils/vendor/shaders/CopyShader.js","utils/vendor/postprocessing/Pass.js","utils/vendor/postprocessing/ShaderPass.js","utils/vendor/postprocessing/MaskPass.js","utils/vendor/postprocessing/EffectComposer.js","utils/vendor/postprocessing/RenderPass.js","utils/vendor/shaders/SAOShader.js","utils/vendor/shaders/DepthLimitedBlurShader.js","utils/vendor/shaders/UnpackDepthRGBAShader.js","utils/vendor/postprocessing/SAOPass.js","pages/kitchenViewer.js","utils/vendor/orbitControls.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["module","exports","__webpack_require__","p","CopyShader","uniforms","tDiffuse","value","opacity","vertexShader","join","fragmentShader","Pass","this","enabled","needsSwap","clear","renderToScreen","Object","assign","prototype","setSize","render","console","error","FullScreenQuad","camera","OrthographicCamera","geometry","PlaneBufferGeometry","material","_mesh","Mesh","defineProperty","get","set","renderer","ShaderPass","shader","textureID","call","undefined","ShaderMaterial","UniformsUtils","clone","defines","fsQuad","create","constructor","writeBuffer","readBuffer","texture","setRenderTarget","autoClearColor","autoClearDepth","autoClearStencil","MaskPass","scene","inverse","writeValue","clearValue","context","state","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","EQUAL","KEEP","ClearMaskPass","EffectComposer","renderTarget","parameters","minFilter","LinearFilter","magFilter","format","RGBAFormat","stencilBuffer","size","getSize","Vector2","_pixelRatio","getPixelRatio","_width","width","_height","height","WebGLRenderTarget","name","renderTarget1","renderTarget2","passes","copyPass","clock","Clock","swapBuffers","tmp","addPass","pass","push","getDrawingBufferSize","insertPass","index","splice","isLastEnabledPass","passIndex","i","length","deltaTime","getDelta","currentRenderTarget","getRenderTarget","maskActive","il","stencilFunc","NOTEQUAL","reset","dispose","effectiveWidth","effectiveHeight","setPixelRatio","pixelRatio","RenderPass","overrideMaterial","clearColor","clearAlpha","clearDepth","oldClearColor","oldClearAlpha","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","SAOShader","NUM_SAMPLES","NUM_RINGS","NORMAL_TEXTURE","DIFFUSE_TEXTURE","DEPTH_PACKING","PERSPECTIVE_CAMERA","tDepth","tNormal","cameraNear","cameraFar","cameraProjectionMatrix","Matrix4","cameraInverseProjectionMatrix","scale","intensity","bias","minResolution","kernelRadius","randomSeed","DepthLimitedBlurShader","KERNEL_RADIUS","sampleUvOffsets","sampleWeights","depthCutoff","BlurShaderUtils","createSampleWeights","stdDev","gaussian","x","Math","exp","sqrt","PI","weights","createSampleOffsets","uvIncrement","offsets","multiplyScalar","configure","needsUpdate","UnpackDepthRGBAShader","SAOPass","depthTexture","useNormals","resolution","supportsDepthTextureExtension","supportsNormalTexture","originalClearColor","Color","params","output","saoBias","saoIntensity","saoScale","saoKernelRadius","saoMinResolution","saoBlur","saoBlurRadius","saoBlurStdDev","saoBlurDepthCutoff","y","saoRenderTarget","blurIntermediateRenderTarget","beautyRenderTarget","normalRenderTarget","NearestFilter","depthRenderTarget","DepthTexture","type","UnsignedShortType","maxFilter","depthBuffer","depthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","blending","NoBlending","normalMaterial","MeshNormalMaterial","saoMaterial","extensions","derivatives","isPerspectiveCamera","getInverse","projectionMatrix","vBlurMaterial","hBlurMaterial","materialCopy","transparent","depthTest","depthWrite","CustomBlending","blendSrc","DstColorFactor","blendDst","ZeroFactor","blendEquation","AddEquation","blendSrcAlpha","DstAlphaFactor","blendDstAlpha","blendEquationAlpha","depthCopy","OUTPUT","Beauty","Default","SAO","Depth","Normal","renderPass","copy","near","far","floor","prevStdDev","prevNumSamples","renderOverride","outputMaterial","passMaterial","originalClearAlpha","originalAutoClear","setClearAlpha","FBXLoader","require","App","props","_useState","useState","containerEl","orbitControl","raycaster","mixer","_useState2","slicedToArray","threeObjects","setThreeObjects","_useState3","_useState4","mixers","setMixers","_useState5","_useState6","actions","setActions","_useState7","_useState8","playingSteps","setPlayingSteps","_useState9","_useState10","_useState11","_useState12","roomLoaded","setRoomLoaded","_useState13","_useState14","textureLoaded","setTextureLoaded","animationFrame","initScene","THREE","offsetWidth","offsetHeight","position","updateProjectionMatrix","light","add","antialias","window","devicePixelRatio","shadowMap","appendChild","domElement","OrbitControls","maxDistance","load","fbxUrl","object","addShadowToChild","traverse","child","isPointLight","castShadow","isDirectionalLight","receiveShadow","shadow","mapSize","left","right","bottom","top","lightHelper","item","log","loaded","total","err","textureLoader","meatTextures","meatUrl","mildMeatUrl","welldoneMeatUrl","composer","saoPass","useEffect","cancelAnimationFrame","update","requestAnimationFrame","delta","forEach","loader","panA","children","find","panShakeUrl","animations","action","clipAction","loop","clampWhenFinished","play","addEventListener","prevPlayingSteps","isMesh","prevActions","concat","toConsumableArray","prevMixers","panFlipUrl","loadPan","stop","meat","meatStep","map","react_default","a","createElement","Fragment","ref","className","style","document","target","Vector3","minDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","position0","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","dispatchEvent","changeEvent","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","distanceToSquared","EPS","dot","quaternion","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","clientWidth","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","default","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","toString","from","_iterableToArray","TypeError","_nonIterableSpread","d","__webpack_exports__"],"mappings":"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","file":"static/js/4.61dffda7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/190715_CLP_game(8).3f43f4c2.fbx\";","module.exports = __webpack_public_path__ + \"static/media/190717_frying pan animationA_shake.0f9bee90.fbx\";","module.exports = __webpack_public_path__ + \"static/media/190717_frying pan animationA_flip.76c68fdb.fbx\";","module.exports = __webpack_public_path__ + \"static/media/meat.5069922d.png\";","module.exports = __webpack_public_path__ + \"static/media/mid_meat.6081577e.png\";","module.exports = __webpack_public_path__ + \"static/media/welldone_meat.0da2595b.png\";","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\n\n\nvar CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { CopyShader };\n","import {\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tMesh\n} from 'three';\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass } from \"utils/vendor/postprocessing/Pass.js\";\n\nvar ShaderPass = function ( shader, textureID ) {\n\n\tPass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new ShaderMaterial( {\n\n\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.fsQuad = new Pass.FullScreenQuad( this.material );\n\n};\n\nShaderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: ShaderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n} );\n\nexport { ShaderPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from 'utils/vendor/postprocessing/Pass';\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nimport {\n\tClock,\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tRGBAFormat,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { ShaderPass } from \"../postprocessing/ShaderPass.js\";\nimport { MaskPass } from \"../postprocessing/MaskPass.js\";\nimport { ClearMaskPass } from \"../postprocessing/MaskPass.js\";\n\nvar EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: LinearFilter,\n\t\t\tmagFilter: LinearFilter,\n\t\t\tformat: RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\n\t\tvar size = renderer.getSize( new Vector2() );\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\t\tthis._width = size.width;\n\t\tthis._height = size.height;\n\n\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, parameters );\n\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t} else {\n\n\t\tthis._pixelRatio = 1;\n\t\tthis._width = renderTarget.width;\n\t\tthis._height = renderTarget.height;\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.renderToScreen = true;\n\n\tthis.passes = [];\n\n\t// dependencies\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on CopyShader' );\n\n\t}\n\n\tif ( ShaderPass === undefined ) {\n\n\t\tconsole.error( 'THREE.EffectComposer relies on ShaderPass' );\n\n\t}\n\n\tthis.copyPass = new ShaderPass( CopyShader );\n\n\tthis.clock = new Clock();\n\n};\n\nObject.assign( EffectComposer.prototype, {\n\n\tswapBuffers: function () {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getDrawingBufferSize( new Vector2() );\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\tisLastEnabledPass: function ( passIndex ) {\n\n\t\tfor ( var i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\trender: function ( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tvar currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tvar effectiveWidth = this._width * this._pixelRatio;\n\t\tvar effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t},\n\n\tsetPixelRatio: function ( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n} );\n\n\nvar Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { EffectComposer, Pass };\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"utils/vendor/postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n","/**\n * TODO\n */\n\nimport {\n\tMatrix4,\n\tVector2\n} from 'three';\n\nvar SAOShader = {\n\tdefines: {\n\t\t'NUM_SAMPLES': 7,\n\t\t'NUM_RINGS': 4,\n\t\t'NORMAL_TEXTURE': 0,\n\t\t'DIFFUSE_TEXTURE': 0,\n\t\t'DEPTH_PACKING': 1,\n\t\t'PERSPECTIVE_CAMERA': 1\n\t},\n\tuniforms: {\n\n\t\t'tDepth': { value: null },\n\t\t'tDiffuse': { value: null },\n\t\t'tNormal': { value: null },\n\t\t'size': { value: new Vector2( 512, 512 ) },\n\n\t\t'cameraNear': { value: 1 },\n\t\t'cameraFar': { value: 100 },\n\t\t'cameraProjectionMatrix': { value: new Matrix4() },\n\t\t'cameraInverseProjectionMatrix': { value: new Matrix4() },\n\n\t\t'scale': { value: 1.0 },\n\t\t'intensity': { value: 0.1 },\n\t\t'bias': { value: 0.5 },\n\n\t\t'minResolution': { value: 0.0 },\n\t\t'kernelRadius': { value: 100.0 },\n\t\t'randomSeed': { value: 0.0 }\n\t},\n\tvertexShader: [\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\tfragmentShader: [\n\t\t\"#include <common>\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#if DIFFUSE_TEXTURE == 1\",\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"#endif\",\n\n\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\"#if NORMAL_TEXTURE == 1\",\n\t\t\"uniform sampler2D tNormal;\",\n\t\t\"#endif\",\n\n\t\t\"uniform float cameraNear;\",\n\t\t\"uniform float cameraFar;\",\n\t\t\"uniform mat4 cameraProjectionMatrix;\",\n\t\t\"uniform mat4 cameraInverseProjectionMatrix;\",\n\n\t\t\"uniform float scale;\",\n\t\t\"uniform float intensity;\",\n\t\t\"uniform float bias;\",\n\t\t\"uniform float kernelRadius;\",\n\t\t\"uniform float minResolution;\",\n\t\t\"uniform vec2 size;\",\n\t\t\"uniform float randomSeed;\",\n\n\t\t\"// RGBA depth\",\n\n\t\t\"#include <packing>\",\n\n\t\t\"vec4 getDefaultColor( const in vec2 screenPosition ) {\",\n\t\t\"\t#if DIFFUSE_TEXTURE == 1\",\n\t\t\"\treturn texture2D( tDiffuse, vUv );\",\n\t\t\"\t#else\",\n\t\t\"\treturn vec4( 1.0 );\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"float getDepth( const in vec2 screenPosition ) {\",\n\t\t\"\t#if DEPTH_PACKING == 1\",\n\t\t\"\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\",\n\t\t\"\t#else\",\n\t\t\"\treturn texture2D( tDepth, screenPosition ).x;\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"float getViewZ( const in float depth ) {\",\n\t\t\"\t#if PERSPECTIVE_CAMERA == 1\",\n\t\t\"\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\n\t\t\"\t#else\",\n\t\t\"\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {\",\n\t\t\"\tfloat clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];\",\n\t\t\"\tvec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );\",\n\t\t\"\tclipPosition *= clipW; // unprojection.\",\n\n\t\t\"\treturn ( cameraInverseProjectionMatrix * clipPosition ).xyz;\",\n\t\t\"}\",\n\n\t\t\"vec3 getViewNormal( const in vec3 viewPosition, const in vec2 screenPosition ) {\",\n\t\t\"\t#if NORMAL_TEXTURE == 1\",\n\t\t\"\treturn unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );\",\n\t\t\"\t#else\",\n\t\t\"\treturn normalize( cross( dFdx( viewPosition ), dFdy( viewPosition ) ) );\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"float scaleDividedByCameraFar;\",\n\t\t\"float minResolutionMultipliedByCameraFar;\",\n\n\t\t\"float getOcclusion( const in vec3 centerViewPosition, const in vec3 centerViewNormal, const in vec3 sampleViewPosition ) {\",\n\t\t\"\tvec3 viewDelta = sampleViewPosition - centerViewPosition;\",\n\t\t\"\tfloat viewDistance = length( viewDelta );\",\n\t\t\"\tfloat scaledScreenDistance = scaleDividedByCameraFar * viewDistance;\",\n\n\t\t\"\treturn max(0.0, (dot(centerViewNormal, viewDelta) - minResolutionMultipliedByCameraFar) / scaledScreenDistance - bias) / (1.0 + pow2( scaledScreenDistance ) );\",\n\t\t\"}\",\n\n\t\t\"// moving costly divides into consts\",\n\t\t\"const float ANGLE_STEP = PI2 * float( NUM_RINGS ) / float( NUM_SAMPLES );\",\n\t\t\"const float INV_NUM_SAMPLES = 1.0 / float( NUM_SAMPLES );\",\n\n\t\t\"float getAmbientOcclusion( const in vec3 centerViewPosition ) {\",\n\t\t\"\t// precompute some variables require in getOcclusion.\",\n\t\t\"\tscaleDividedByCameraFar = scale / cameraFar;\",\n\t\t\"\tminResolutionMultipliedByCameraFar = minResolution * cameraFar;\",\n\t\t\"\tvec3 centerViewNormal = getViewNormal( centerViewPosition, vUv );\",\n\n\t\t\"\t// jsfiddle that shows sample pattern: https://jsfiddle.net/a16ff1p7/\",\n\t\t\"\tfloat angle = rand( vUv + randomSeed ) * PI2;\",\n\t\t\"\tvec2 radius = vec2( kernelRadius * INV_NUM_SAMPLES ) / size;\",\n\t\t\"\tvec2 radiusStep = radius;\",\n\n\t\t\"\tfloat occlusionSum = 0.0;\",\n\t\t\"\tfloat weightSum = 0.0;\",\n\n\t\t\"\tfor( int i = 0; i < NUM_SAMPLES; i ++ ) {\",\n\t\t\"\t\tvec2 sampleUv = vUv + vec2( cos( angle ), sin( angle ) ) * radius;\",\n\t\t\"\t\tradius += radiusStep;\",\n\t\t\"\t\tangle += ANGLE_STEP;\",\n\n\t\t\"\t\tfloat sampleDepth = getDepth( sampleUv );\",\n\t\t\"\t\tif( sampleDepth >= ( 1.0 - EPSILON ) ) {\",\n\t\t\"\t\t\tcontinue;\",\n\t\t\"\t\t}\",\n\n\t\t\"\t\tfloat sampleViewZ = getViewZ( sampleDepth );\",\n\t\t\"\t\tvec3 sampleViewPosition = getViewPosition( sampleUv, sampleDepth, sampleViewZ );\",\n\t\t\"\t\tocclusionSum += getOcclusion( centerViewPosition, centerViewNormal, sampleViewPosition );\",\n\t\t\"\t\tweightSum += 1.0;\",\n\t\t\"\t}\",\n\n\t\t\"\tif( weightSum == 0.0 ) discard;\",\n\n\t\t\"\treturn occlusionSum * ( intensity / weightSum );\",\n\t\t\"}\",\n\n\n\t\t\"void main() {\",\n\t\t\"\tfloat centerDepth = getDepth( vUv );\",\n\t\t\"\tif( centerDepth >= ( 1.0 - EPSILON ) ) {\",\n\t\t\"\t\tdiscard;\",\n\t\t\"\t}\",\n\n\t\t\"\tfloat centerViewZ = getViewZ( centerDepth );\",\n\t\t\"\tvec3 viewPosition = getViewPosition( vUv, centerDepth, centerViewZ );\",\n\n\t\t\"\tfloat ambientOcclusion = getAmbientOcclusion( viewPosition );\",\n\n\t\t\"\tgl_FragColor = getDefaultColor( vUv );\",\n\t\t\"\tgl_FragColor.xyz *=  1.0 - ambientOcclusion;\",\n\t\t\"}\"\n\t].join( \"\\n\" )\n};\n\nexport { SAOShader };\n","/**\n * TODO\n */\n\nimport {\n\tVector2\n} from 'three';\n\nvar DepthLimitedBlurShader = {\n\tdefines: {\n\t\t'KERNEL_RADIUS': 4,\n\t\t'DEPTH_PACKING': 1,\n\t\t'PERSPECTIVE_CAMERA': 1\n\t},\n\tuniforms: {\n\t\t'tDiffuse': { value: null },\n\t\t'size': { value: new Vector2( 512, 512 ) },\n\t\t'sampleUvOffsets': { value: [ new Vector2( 0, 0 ) ] },\n\t\t'sampleWeights': { value: [ 1.0 ] },\n\t\t'tDepth': { value: null },\n\t\t'cameraNear': { value: 10 },\n\t\t'cameraFar': { value: 1000 },\n\t\t'depthCutoff': { value: 10 },\n\t},\n\tvertexShader: [\n\t\t\"#include <common>\",\n\n\t\t\"uniform vec2 size;\",\n\n\t\t\"varying vec2 vUv;\",\n\t\t\"varying vec2 vInvSize;\",\n\n\t\t\"void main() {\",\n\t\t\"\tvUv = uv;\",\n\t\t\"\tvInvSize = 1.0 / size;\",\n\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\tfragmentShader: [\n\t\t\"#include <common>\",\n\t\t\"#include <packing>\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform sampler2D tDepth;\",\n\n\t\t\"uniform float cameraNear;\",\n\t\t\"uniform float cameraFar;\",\n\t\t\"uniform float depthCutoff;\",\n\n\t\t\"uniform vec2 sampleUvOffsets[ KERNEL_RADIUS + 1 ];\",\n\t\t\"uniform float sampleWeights[ KERNEL_RADIUS + 1 ];\",\n\n\t\t\"varying vec2 vUv;\",\n\t\t\"varying vec2 vInvSize;\",\n\n\t\t\"float getDepth( const in vec2 screenPosition ) {\",\n\t\t\"\t#if DEPTH_PACKING == 1\",\n\t\t\"\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\",\n\t\t\"\t#else\",\n\t\t\"\treturn texture2D( tDepth, screenPosition ).x;\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"float getViewZ( const in float depth ) {\",\n\t\t\"\t#if PERSPECTIVE_CAMERA == 1\",\n\t\t\"\treturn perspectiveDepthToViewZ( depth, cameraNear, cameraFar );\",\n\t\t\"\t#else\",\n\t\t\"\treturn orthographicDepthToViewZ( depth, cameraNear, cameraFar );\",\n\t\t\"\t#endif\",\n\t\t\"}\",\n\n\t\t\"void main() {\",\n\t\t\"\tfloat depth = getDepth( vUv );\",\n\t\t\"\tif( depth >= ( 1.0 - EPSILON ) ) {\",\n\t\t\"\t\tdiscard;\",\n\t\t\"\t}\",\n\n\t\t\"\tfloat centerViewZ = -getViewZ( depth );\",\n\t\t\"\tbool rBreak = false, lBreak = false;\",\n\n\t\t\"\tfloat weightSum = sampleWeights[0];\",\n\t\t\"\tvec4 diffuseSum = texture2D( tDiffuse, vUv ) * weightSum;\",\n\n\t\t\"\tfor( int i = 1; i <= KERNEL_RADIUS; i ++ ) {\",\n\n\t\t\"\t\tfloat sampleWeight = sampleWeights[i];\",\n\t\t\"\t\tvec2 sampleUvOffset = sampleUvOffsets[i] * vInvSize;\",\n\n\t\t\"\t\tvec2 sampleUv = vUv + sampleUvOffset;\",\n\t\t\"\t\tfloat viewZ = -getViewZ( getDepth( sampleUv ) );\",\n\n\t\t\"\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) rBreak = true;\",\n\n\t\t\"\t\tif( ! rBreak ) {\",\n\t\t\"\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\",\n\t\t\"\t\t\tweightSum += sampleWeight;\",\n\t\t\"\t\t}\",\n\n\t\t\"\t\tsampleUv = vUv - sampleUvOffset;\",\n\t\t\"\t\tviewZ = -getViewZ( getDepth( sampleUv ) );\",\n\n\t\t\"\t\tif( abs( viewZ - centerViewZ ) > depthCutoff ) lBreak = true;\",\n\n\t\t\"\t\tif( ! lBreak ) {\",\n\t\t\"\t\t\tdiffuseSum += texture2D( tDiffuse, sampleUv ) * sampleWeight;\",\n\t\t\"\t\t\tweightSum += sampleWeight;\",\n\t\t\"\t\t}\",\n\n\t\t\"\t}\",\n\n\t\t\"\tgl_FragColor = diffuseSum / weightSum;\",\n\t\t\"}\"\n\t].join( \"\\n\" )\n};\n\nvar BlurShaderUtils = {\n\n\tcreateSampleWeights: function ( kernelRadius, stdDev ) {\n\n\t\tvar gaussian = function ( x, stdDev ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * ( stdDev * stdDev ) ) ) / ( Math.sqrt( 2.0 * Math.PI ) * stdDev );\n\n\t\t};\n\n\t\tvar weights = [];\n\n\t\tfor ( var i = 0; i <= kernelRadius; i ++ ) {\n\n\t\t\tweights.push( gaussian( i, stdDev ) );\n\n\t\t}\n\n\t\treturn weights;\n\n\t},\n\n\tcreateSampleOffsets: function ( kernelRadius, uvIncrement ) {\n\n\t\tvar offsets = [];\n\n\t\tfor ( var i = 0; i <= kernelRadius; i ++ ) {\n\n\t\t\toffsets.push( uvIncrement.clone().multiplyScalar( i ) );\n\n\t\t}\n\n\t\treturn offsets;\n\n\t},\n\n\tconfigure: function ( material, kernelRadius, stdDev, uvIncrement ) {\n\n\t\tmaterial.defines[ 'KERNEL_RADIUS' ] = kernelRadius;\n\t\tmaterial.uniforms[ 'sampleUvOffsets' ].value = BlurShaderUtils.createSampleOffsets( kernelRadius, uvIncrement );\n\t\tmaterial.uniforms[ 'sampleWeights' ].value = BlurShaderUtils.createSampleWeights( kernelRadius, stdDev );\n\t\tmaterial.needsUpdate = true;\n\n\t}\n\n};\n\nexport { DepthLimitedBlurShader, BlurShaderUtils };\n","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Unpack RGBA depth shader\n * - show RGBA encoded depth as monochrome color\n */\n\n\n\nvar UnpackDepthRGBAShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\": { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"#include <packing>\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"float depth = 1.0 - unpackRGBAToDepth( texture2D( tDiffuse, vUv ) );\",\n\t\t\t\"gl_FragColor = vec4( vec3( depth ), opacity );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { UnpackDepthRGBAShader };\n","/**\n * @author ludobaka / ludobaka.github.io\n * SAO implementation inspired from bhouston previous SAO work\n */\n\nimport {\n\tAddEquation,\n\tColor,\n\tCustomBlending,\n\tDepthTexture,\n\tDstAlphaFactor,\n\tDstColorFactor,\n\tLinearFilter,\n\tMeshDepthMaterial,\n\tMeshNormalMaterial,\n\tNearestFilter,\n\tNoBlending,\n\tRGBADepthPacking,\n\tRGBAFormat,\n\tShaderMaterial,\n\tUniformsUtils,\n\tUnsignedShortType,\n\tVector2,\n\tWebGLRenderTarget,\n\tZeroFactor\n} from 'three';\nimport { Pass } from \"../postprocessing/Pass.js\";\nimport { SAOShader } from \"../shaders/SAOShader.js\";\nimport { DepthLimitedBlurShader, BlurShaderUtils } from \"../shaders/DepthLimitedBlurShader.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nimport { UnpackDepthRGBAShader } from \"../shaders/UnpackDepthRGBAShader.js\";\n\nvar SAOPass = function ( scene, camera, depthTexture, useNormals, resolution ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.supportsDepthTextureExtension = ( depthTexture !== undefined ) ? depthTexture : false;\n\tthis.supportsNormalTexture = ( useNormals !== undefined ) ? useNormals : false;\n\n\tthis.originalClearColor = new Color();\n\tthis.oldClearColor = new Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.params = {\n\t\toutput: 0,\n\t\tsaoBias: 0.5,\n\t\tsaoIntensity: 0.18,\n\t\tsaoScale: 1,\n\t\tsaoKernelRadius: 100,\n\t\tsaoMinResolution: 0,\n\t\tsaoBlur: true,\n\t\tsaoBlurRadius: 8,\n\t\tsaoBlurStdDev: 4,\n\t\tsaoBlurDepthCutoff: 0.01\n\t};\n\n\tthis.resolution = ( resolution !== undefined ) ? new Vector2( resolution.x, resolution.y ) : new Vector2( 256, 256 );\n\n\tthis.saoRenderTarget = new WebGLRenderTarget( this.resolution.x, this.resolution.y, {\n\t\tminFilter: LinearFilter,\n\t\tmagFilter: LinearFilter,\n\t\tformat: RGBAFormat\n\t} );\n\tthis.blurIntermediateRenderTarget = this.saoRenderTarget.clone();\n\tthis.beautyRenderTarget = this.saoRenderTarget.clone();\n\n\tthis.normalRenderTarget = new WebGLRenderTarget( this.resolution.x, this.resolution.y, {\n\t\tminFilter: NearestFilter,\n\t\tmagFilter: NearestFilter,\n\t\tformat: RGBAFormat\n\t} );\n\tthis.depthRenderTarget = this.normalRenderTarget.clone();\n\n\tif ( this.supportsDepthTextureExtension ) {\n\n\t\tvar depthTexture = new DepthTexture();\n\t\tdepthTexture.type = UnsignedShortType;\n\t\tdepthTexture.minFilter = NearestFilter;\n\t\tdepthTexture.maxFilter = NearestFilter;\n\n\t\tthis.beautyRenderTarget.depthTexture = depthTexture;\n\t\tthis.beautyRenderTarget.depthBuffer = true;\n\n\t}\n\n\tthis.depthMaterial = new MeshDepthMaterial();\n\tthis.depthMaterial.depthPacking = RGBADepthPacking;\n\tthis.depthMaterial.blending = NoBlending;\n\n\tthis.normalMaterial = new MeshNormalMaterial();\n\tthis.normalMaterial.blending = NoBlending;\n\n\tif ( SAOShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on SAOShader' );\n\n\t}\n\n\tthis.saoMaterial = new ShaderMaterial( {\n\t\tdefines: Object.assign( {}, SAOShader.defines ),\n\t\tfragmentShader: SAOShader.fragmentShader,\n\t\tvertexShader: SAOShader.vertexShader,\n\t\tuniforms: UniformsUtils.clone( SAOShader.uniforms )\n\t} );\n\tthis.saoMaterial.extensions.derivatives = true;\n\tthis.saoMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.saoMaterial.defines[ 'NORMAL_TEXTURE' ] = this.supportsNormalTexture ? 1 : 0;\n\tthis.saoMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.saoMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.saoMaterial.uniforms[ 'tNormal' ].value = this.normalRenderTarget.texture;\n\tthis.saoMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.saoMaterial.uniforms[ 'cameraInverseProjectionMatrix' ].value.getInverse( this.camera.projectionMatrix );\n\tthis.saoMaterial.uniforms[ 'cameraProjectionMatrix' ].value = this.camera.projectionMatrix;\n\tthis.saoMaterial.blending = NoBlending;\n\n\tif ( DepthLimitedBlurShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on DepthLimitedBlurShader' );\n\n\t}\n\n\tthis.vBlurMaterial = new ShaderMaterial( {\n\t\tuniforms: UniformsUtils.clone( DepthLimitedBlurShader.uniforms ),\n\t\tdefines: Object.assign( {}, DepthLimitedBlurShader.defines ),\n\t\tvertexShader: DepthLimitedBlurShader.vertexShader,\n\t\tfragmentShader: DepthLimitedBlurShader.fragmentShader\n\t} );\n\tthis.vBlurMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.vBlurMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.vBlurMaterial.uniforms[ 'tDiffuse' ].value = this.saoRenderTarget.texture;\n\tthis.vBlurMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.vBlurMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.vBlurMaterial.blending = NoBlending;\n\n\tthis.hBlurMaterial = new ShaderMaterial( {\n\t\tuniforms: UniformsUtils.clone( DepthLimitedBlurShader.uniforms ),\n\t\tdefines: Object.assign( {}, DepthLimitedBlurShader.defines ),\n\t\tvertexShader: DepthLimitedBlurShader.vertexShader,\n\t\tfragmentShader: DepthLimitedBlurShader.fragmentShader\n\t} );\n\tthis.hBlurMaterial.defines[ 'DEPTH_PACKING' ] = this.supportsDepthTextureExtension ? 0 : 1;\n\tthis.hBlurMaterial.defines[ 'PERSPECTIVE_CAMERA' ] = this.camera.isPerspectiveCamera ? 1 : 0;\n\tthis.hBlurMaterial.uniforms[ 'tDiffuse' ].value = this.blurIntermediateRenderTarget.texture;\n\tthis.hBlurMaterial.uniforms[ 'tDepth' ].value = ( this.supportsDepthTextureExtension ) ? depthTexture : this.depthRenderTarget.texture;\n\tthis.hBlurMaterial.uniforms[ 'size' ].value.set( this.resolution.x, this.resolution.y );\n\tthis.hBlurMaterial.blending = NoBlending;\n\n\tif ( CopyShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on CopyShader' );\n\n\t}\n\n\tthis.materialCopy = new ShaderMaterial( {\n\t\tuniforms: UniformsUtils.clone( CopyShader.uniforms ),\n\t\tvertexShader: CopyShader.vertexShader,\n\t\tfragmentShader: CopyShader.fragmentShader,\n\t\tblending: NoBlending\n\t} );\n\tthis.materialCopy.transparent = true;\n\tthis.materialCopy.depthTest = false;\n\tthis.materialCopy.depthWrite = false;\n\tthis.materialCopy.blending = CustomBlending;\n\tthis.materialCopy.blendSrc = DstColorFactor;\n\tthis.materialCopy.blendDst = ZeroFactor;\n\tthis.materialCopy.blendEquation = AddEquation;\n\tthis.materialCopy.blendSrcAlpha = DstAlphaFactor;\n\tthis.materialCopy.blendDstAlpha = ZeroFactor;\n\tthis.materialCopy.blendEquationAlpha = AddEquation;\n\n\tif ( UnpackDepthRGBAShader === undefined ) {\n\n\t\tconsole.error( 'THREE.SAOPass relies on UnpackDepthRGBAShader' );\n\n\t}\n\n\tthis.depthCopy = new ShaderMaterial( {\n\t\tuniforms: UniformsUtils.clone( UnpackDepthRGBAShader.uniforms ),\n\t\tvertexShader: UnpackDepthRGBAShader.vertexShader,\n\t\tfragmentShader: UnpackDepthRGBAShader.fragmentShader,\n\t\tblending: NoBlending\n\t} );\n\n\tthis.fsQuad = new Pass.FullScreenQuad( null );\n\n};\n\nSAOPass.OUTPUT = {\n\t'Beauty': 1,\n\t'Default': 0,\n\t'SAO': 2,\n\t'Depth': 3,\n\t'Normal': 4\n};\n\nSAOPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\tconstructor: SAOPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Rendering readBuffer first when rendering to screen\n\t\tif ( this.renderToScreen ) {\n\n\t\t\tthis.materialCopy.blending = NoBlending;\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\t\t\tthis.renderPass( renderer, this.materialCopy, null );\n\n\t\t}\n\n\t\tif ( this.params.output === 1 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setRenderTarget( this.depthRenderTarget );\n\t\trenderer.clear();\n\n\t\tthis.saoMaterial.uniforms[ 'bias' ].value = this.params.saoBias;\n\t\tthis.saoMaterial.uniforms[ 'intensity' ].value = this.params.saoIntensity;\n\t\tthis.saoMaterial.uniforms[ 'scale' ].value = this.params.saoScale;\n\t\tthis.saoMaterial.uniforms[ 'kernelRadius' ].value = this.params.saoKernelRadius;\n\t\tthis.saoMaterial.uniforms[ 'minResolution' ].value = this.params.saoMinResolution;\n\t\tthis.saoMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.saoMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\t\t// this.saoMaterial.uniforms['randomSeed'].value = Math.random();\n\n\t\tvar depthCutoff = this.params.saoBlurDepthCutoff * ( this.camera.far - this.camera.near );\n\t\tthis.vBlurMaterial.uniforms[ 'depthCutoff' ].value = depthCutoff;\n\t\tthis.hBlurMaterial.uniforms[ 'depthCutoff' ].value = depthCutoff;\n\n\t\tthis.vBlurMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.vBlurMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\t\tthis.hBlurMaterial.uniforms[ 'cameraNear' ].value = this.camera.near;\n\t\tthis.hBlurMaterial.uniforms[ 'cameraFar' ].value = this.camera.far;\n\n\t\tthis.params.saoBlurRadius = Math.floor( this.params.saoBlurRadius );\n\t\tif ( ( this.prevStdDev !== this.params.saoBlurStdDev ) || ( this.prevNumSamples !== this.params.saoBlurRadius ) ) {\n\n\t\t\tBlurShaderUtils.configure( this.vBlurMaterial, this.params.saoBlurRadius, this.params.saoBlurStdDev, new Vector2( 0, 1 ) );\n\t\t\tBlurShaderUtils.configure( this.hBlurMaterial, this.params.saoBlurRadius, this.params.saoBlurStdDev, new Vector2( 1, 0 ) );\n\t\t\tthis.prevStdDev = this.params.saoBlurStdDev;\n\t\t\tthis.prevNumSamples = this.params.saoBlurRadius;\n\n\t\t}\n\n\t\t// Rendering scene to depth texture\n\t\trenderer.setClearColor( 0x000000 );\n\t\trenderer.setRenderTarget( this.beautyRenderTarget );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Re-render scene if depth texture extension is not supported\n\t\tif ( ! this.supportsDepthTextureExtension ) {\n\n\t\t\t// Clear rule : far clipping plane in both RGBA and Basic encoding\n\t\t\tthis.renderOverride( renderer, this.depthMaterial, this.depthRenderTarget, 0x000000, 1.0 );\n\n\t\t}\n\n\t\tif ( this.supportsNormalTexture ) {\n\n\t\t\t// Clear rule : default normal is facing the camera\n\t\t\tthis.renderOverride( renderer, this.normalMaterial, this.normalRenderTarget, 0x7777ff, 1.0 );\n\n\t\t}\n\n\t\t// Rendering SAO texture\n\t\tthis.renderPass( renderer, this.saoMaterial, this.saoRenderTarget, 0xffffff, 1.0 );\n\n\t\t// Blurring SAO texture\n\t\tif ( this.params.saoBlur ) {\n\n\t\t\tthis.renderPass( renderer, this.vBlurMaterial, this.blurIntermediateRenderTarget, 0xffffff, 1.0 );\n\t\t\tthis.renderPass( renderer, this.hBlurMaterial, this.saoRenderTarget, 0xffffff, 1.0 );\n\n\t\t}\n\n\t\tvar outputMaterial = this.materialCopy;\n\t\t// Setting up SAO rendering\n\t\tif ( this.params.output === 3 ) {\n\n\t\t\tif ( this.supportsDepthTextureExtension ) {\n\n\t\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.beautyRenderTarget.depthTexture;\n\t\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t\t} else {\n\n\t\t\t\tthis.depthCopy.uniforms[ 'tDiffuse' ].value = this.depthRenderTarget.texture;\n\t\t\t\tthis.depthCopy.needsUpdate = true;\n\t\t\t\toutputMaterial = this.depthCopy;\n\n\t\t\t}\n\n\t\t} else if ( this.params.output === 4 ) {\n\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.normalRenderTarget.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t} else {\n\n\t\t\tthis.materialCopy.uniforms[ 'tDiffuse' ].value = this.saoRenderTarget.texture;\n\t\t\tthis.materialCopy.needsUpdate = true;\n\n\t\t}\n\n\t\t// Blending depends on output, only want a CustomBlending when showing SAO\n\t\tif ( this.params.output === 0 ) {\n\n\t\t\toutputMaterial.blending = CustomBlending;\n\n\t\t} else {\n\n\t\t\toutputMaterial.blending = NoBlending;\n\n\t\t}\n\n\t\t// Rendering SAOPass result on top of previous pass\n\t\tthis.renderPass( renderer, outputMaterial, this.renderToScreen ? null : readBuffer );\n\n\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t},\n\n\trenderPass: function ( renderer, passMaterial, renderTarget, clearColor, clearAlpha ) {\n\n\t\t// save original state\n\t\tthis.originalClearColor.copy( renderer.getClearColor() );\n\t\tvar originalClearAlpha = renderer.getClearAlpha();\n\t\tvar originalAutoClear = renderer.autoClear;\n\n\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t// setup pass state\n\t\trenderer.autoClear = false;\n\t\tif ( ( clearColor !== undefined ) && ( clearColor !== null ) ) {\n\n\t\t\trenderer.setClearColor( clearColor );\n\t\t\trenderer.setClearAlpha( clearAlpha || 0.0 );\n\t\t\trenderer.clear();\n\n\t\t}\n\n\t\tthis.fsQuad.material = passMaterial;\n\t\tthis.fsQuad.render( renderer );\n\n\t\t// restore original state\n\t\trenderer.autoClear = originalAutoClear;\n\t\trenderer.setClearColor( this.originalClearColor );\n\t\trenderer.setClearAlpha( originalClearAlpha );\n\n\t},\n\n\trenderOverride: function ( renderer, overrideMaterial, renderTarget, clearColor, clearAlpha ) {\n\n\t\tthis.originalClearColor.copy( renderer.getClearColor() );\n\t\tvar originalClearAlpha = renderer.getClearAlpha();\n\t\tvar originalAutoClear = renderer.autoClear;\n\n\t\trenderer.setRenderTarget( renderTarget );\n\t\trenderer.autoClear = false;\n\n\t\tclearColor = overrideMaterial.clearColor || clearColor;\n\t\tclearAlpha = overrideMaterial.clearAlpha || clearAlpha;\n\t\tif ( ( clearColor !== undefined ) && ( clearColor !== null ) ) {\n\n\t\t\trenderer.setClearColor( clearColor );\n\t\t\trenderer.setClearAlpha( clearAlpha || 0.0 );\n\t\t\trenderer.clear();\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = overrideMaterial;\n\t\trenderer.render( this.scene, this.camera );\n\t\tthis.scene.overrideMaterial = null;\n\n\t\t// restore original state\n\t\trenderer.autoClear = originalAutoClear;\n\t\trenderer.setClearColor( this.originalClearColor );\n\t\trenderer.setClearAlpha( originalClearAlpha );\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.beautyRenderTarget.setSize( width, height );\n\t\tthis.saoRenderTarget.setSize( width, height );\n\t\tthis.blurIntermediateRenderTarget.setSize( width, height );\n\t\tthis.normalRenderTarget.setSize( width, height );\n\t\tthis.depthRenderTarget.setSize( width, height );\n\n\t\tthis.saoMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.saoMaterial.uniforms[ 'cameraInverseProjectionMatrix' ].value.getInverse( this.camera.projectionMatrix );\n\t\tthis.saoMaterial.uniforms[ 'cameraProjectionMatrix' ].value = this.camera.projectionMatrix;\n\t\tthis.saoMaterial.needsUpdate = true;\n\n\t\tthis.vBlurMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.vBlurMaterial.needsUpdate = true;\n\n\t\tthis.hBlurMaterial.uniforms[ 'size' ].value.set( width, height );\n\t\tthis.hBlurMaterial.needsUpdate = true;\n\n\t}\n\n} );\n\nexport { SAOPass };\n","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'utils/vendor/orbitControls';\r\n\r\nimport { EffectComposer } from 'utils/vendor/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'utils/vendor/postprocessing/RenderPass';\r\nimport { SAOPass } from 'utils/vendor/postprocessing/SAOPass';\r\n\r\n// import WEBVR from 'utils/vendor/WebVR';\r\n\r\n// import {FBXLoader} from 'utils/vendor/FBXLoader';\r\n\r\n// import fbxUrl from 'media/models/Windows for Building department breaking.fbx';\r\n// import fbxUrl from 'media/models/190717_frying pan animationA(2).fbx';\r\n// import fbxUrl from 'media/models/190717_frying pan animationA_shake.fbx';\r\n\r\nimport fbxUrl from 'media/models/190715_CLP_game(8).fbx';\r\n\r\nimport panShakeUrl from 'media/models/190717_frying pan animationA_shake.fbx';\r\nimport panFlipUrl from 'media/models/190717_frying pan animationA_flip.fbx';\r\n\r\nimport meatUrl from 'media/textures/meat.png';\r\nimport mildMeatUrl from 'media/textures/mid_meat.png';\r\nimport welldoneMeatUrl from 'media/textures/welldone_meat.png';\r\n\r\nconst FBXLoader = require('three-fbxloader-offical');\r\n\r\nconst addShadowToChild = (object, scene) => {\r\n  object.traverse( function ( child ) {\r\n    if (object !== child) {\r\n      addShadowToChild(child, scene);\r\n    }\r\n    // if ( child.isMesh ) {\r\n      \r\n      // child.need\r\n    // }\r\n    if (child.isPointLight) {\r\n      // const lightHelper = new THREE.PointLightHelper( child, 10 );\r\n      // scene.add(lightHelper);\r\n      child.castShadow = false;\r\n      child.intensity = 0.85;\r\n    } else if (child.isDirectionalLight) {\r\n      child.castShadow = true;\r\n      child.receiveShadow = true;\r\n      child.shadow.mapSize.width = 512;\r\n      child.shadow.mapSize.height = 512;\r\n      child.shadow.camera.near = 0.5;    // default\r\n      child.shadow.camera.far = 5000;     // default\r\n      child.shadow.camera.left = -1000;\r\n      child.shadow.camera.right = 1000;\r\n      child.shadow.camera.bottom = -1000;\r\n      child.shadow.camera.top = 1000;\r\n      child.intensity = 0.3;\r\n      const lightHelper = new THREE.DirectionalLightHelper( child, 10 );\r\n      scene.add(lightHelper);\r\n    } else {\r\n      child.castShadow = true;\r\n      child.receiveShadow = true;\r\n    }\r\n  });\r\n}\r\nconst App = (props) => {\r\n  const [threeObjects, setThreeObjects] = useState({\r\n    scene: null,\r\n    camera: null,\r\n    containerEl: null,\r\n    renderer: null,\r\n    orbitControl: null,\r\n    raycaster: null,\r\n    clock: null,\r\n    mixer: null,\r\n  });\r\n  const [mixers, setMixers] = useState([]);\r\n  const [actions, setActions] = useState([]);\r\n  const [playingSteps, setPlayingSteps] = useState(0);\r\n  const [animatePan, setAnimatePan] = useState(0);\r\n  const [roomLoaded, setRoomLoaded] = useState(null);\r\n  const [textureLoaded, setTextureLoaded] = useState([]);\r\n  let containerEl = null;\r\n  let animationFrame = null;\r\n  const setContainerEl = (ref) => containerEl = ref;\r\n  const initScene = () => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera( 50, containerEl.offsetWidth / containerEl.offsetHeight, 1, 1000 );\r\n    camera.position.set(49, 274, -214);\r\n    // camera.rotation.set(-2.4434609527920594, 0.01, -3.1415926535897927);\r\n    // camera.lookAt(0, 0, 0);\r\n    camera.updateProjectionMatrix();\r\n    \r\n    // const light = new THREE.DirectionalLight(0xFFFFFF, 1);\r\n    // light.position.set(50, 100, 100);\r\n    // scene.add(light);\r\n\r\n    // light.position.set(50, 100, 100);\r\n    const light = new THREE.AmbientLight(0xFFFFFF, 0.1);\r\n    scene.add(light);\r\n\r\n    const renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n    renderer.setPixelRatio( window.devicePixelRatio );\r\n    renderer.setSize( containerEl.offsetWidth, containerEl.offsetHeight );\r\n    renderer.setClearColor( 0xcccccc, 1 );\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.needsUpdate = true;\r\n    containerEl.appendChild( renderer.domElement );\r\n\r\n    // add control\r\n    const orbitControl = new OrbitControls( camera, renderer.domElement );\r\n    // dampling\r\n    // orbitControl.enableDamping = true;\r\n    // orbitControl.dampingFactor = 0.05;\r\n    // // to cancel out the super fast rotation after enabled damping\r\n    // // orbitControl.enableRotate = false;\r\n    // orbitControl.rotateSpeed = 0.02;\r\n    // orbitControl.autoRotateSpeed = 0.05;\r\n    \r\n    /**\r\n     * limit the vertical rotation\r\n     * https://stackoverflow.com/questions/25308943/limit-orbitcontrols-horizontal-rotation/25311658#25311658\r\n     **/ \r\n    // How far you can orbit vertically, upper and lower limits.\r\n    // Range is 0 to Math.PI radians\r\n    // orbitControl.minPolarAngle = Math.PI / 8;\r\n    // orbitControl.maxPolarAngle = Math.PI * 3 / 8;\r\n    // // How far you can orbit horizontally, upper and lower limits.\r\n    // // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n    // orbitControl.minAzimuthAngle = Math.PI / 4;\r\n    // orbitControl.maxAzimuthAngle = Math.PI / 4; \r\n    \r\n    // // to disable zoom\r\n    // orbitControl.enableZoom = false;\r\n    // orbitControl.minDistance = 5;\r\n    // orbitControl.maxDistance = 5;\r\n    // to disable rotation\r\n    // orbitControl.enableRotate = false;\r\n    // to disable pan\r\n    // orbitControl.enablePan = false;\r\n    // orbitControl.panSpeed = 0.05;\r\n    // raycaster\r\n    const raycaster = new THREE.Raycaster(camera.position, new THREE.Vector3(0, 0, 0), 0, orbitControl.maxDistance * 2);\r\n\r\n    const clock = new THREE.Clock();\r\n\r\n\r\n    \r\n\r\n    const loader = new FBXLoader();\r\n    // let mixer = null;\r\n    loader.load(fbxUrl, (object) => {\r\n      // mixer = new THREE.AnimationMixer( object );\r\n      // const action = mixer.clipAction( object.animations[ 0 ] );\r\n      // action.loop = THREE.LoopOnce;\r\n      // action.clampWhenFinished = true;\r\n      // action.play();\r\n      // object.traverse( function ( child ) {\r\n      //   if ( child.isMesh ) {\r\n      //     child.castShadow = true;\r\n      //     child.receiveShadow = true;\r\n      //   }\r\n      // });\r\n      addShadowToChild(object, scene);\r\n      scene.add(object);\r\n      setRoomLoaded(object);\r\n      // console.log(object);\r\n      // camera.lookAt(object);\r\n      // setThreeObjects((prevThreeObjects) => {\r\n      //   return {\r\n      //     ...prevThreeObjects,\r\n      //     mixer: mixer,\r\n      //     action: action,\r\n      //   }\r\n      // })\r\n    }, (item) => {\r\n      // console.log( item, loaded, total );\r\n      console.log(item.loaded / item.total * 100 + '%');\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n    \r\n    const textureLoader = new THREE.TextureLoader();\r\n    const meatTextures = [\r\n      textureLoader.load(meatUrl),\r\n      textureLoader.load(mildMeatUrl),\r\n      textureLoader.load(welldoneMeatUrl)\r\n    ];\r\n    setTextureLoaded(meatTextures);\r\n\r\n    // postprocessing sao\r\n    // https://threejs.org/examples/jsm/postprocessing/EffectComposer.js\r\n    const composer = new EffectComposer( renderer );\r\n    const renderPass = new RenderPass( scene, camera );\r\n    composer.addPass( renderPass );\r\n    const saoPass = new SAOPass( scene, camera, false, true );\r\n    composer.addPass( saoPass );\r\n    // debugger\r\n    // default params for the saoPass\r\n    saoPass.params.output = SAOPass.OUTPUT.Default;\r\n    saoPass.params.saoBias = 0.5;\r\n    saoPass.params.saoIntensity = 0.5;\r\n    saoPass.params.saoScale = 200;\r\n    saoPass.params.saoKernelRadius = 15;\r\n    saoPass.params.saoMinResolution = 0;\r\n    saoPass.params.saoBlur = true;\r\n    saoPass.params.saoBlurRadius = 8;\r\n    saoPass.params.saoBlurStdDev = 4;\r\n    saoPass.params.saoBlurDepthCutoff = 0.01;\r\n\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    renderer.shadowMap.needsUpdate = true;\r\n\r\n    // renderer.vr.enabled = true;\r\n    setThreeObjects({\r\n      scene: scene,\r\n      camera: camera,\r\n      containerEl: containerEl,\r\n      renderer: renderer,\r\n      orbitControl: orbitControl,\r\n      raycaster: raycaster,\r\n      clock: clock,\r\n      composer: composer,\r\n    })\r\n  }\r\n\r\n  const loadPan = () => {\r\n    const loader = new FBXLoader();\r\n    // console.log(roomLoaded);\r\n    const panA = roomLoaded.children.find(child => child.name === \"frying_pan_A\");\r\n    \r\n    loader.load(panShakeUrl, (object) => {\r\n      const mixer = new THREE.AnimationMixer( panA );\r\n      object.animations[ 0 ][\"tracks\"][0][\"name\"] = \"Meat_A.position\";\r\n      object.animations[ 0 ][\"tracks\"][1][\"name\"] = \"Meat_A.quaternion\";\r\n      const action = mixer.clipAction( object.animations[ 0 ] );\r\n      action.loop = THREE.LoopOnce;\r\n      action.clampWhenFinished = true;\r\n      action.play();\r\n      mixer.addEventListener('finished', () => {\r\n        setPlayingSteps((prevPlayingSteps) => {\r\n          return prevPlayingSteps + 1;\r\n        })\r\n      })\r\n      object.traverse( function ( child ) {\r\n        if ( child.isMesh ) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      // addShadowToChild(object, scene);\r\n      // scene.add(object);\r\n      setActions((prevActions) => {\r\n        return [\r\n          ...prevActions,\r\n          action\r\n        ]\r\n      })\r\n      setMixers((prevMixers) => {\r\n        return [\r\n          ...prevMixers,\r\n          mixer\r\n        ]\r\n      })\r\n      \r\n      // camera.lookAt(object);\r\n      // setThreeObjects((prevThreeObjects) => {\r\n      //   return {\r\n      //     ...prevThreeObjects,\r\n      //     mixer: mixer,\r\n      //     action: action,\r\n      //   }\r\n      // })\r\n    }, (item) => {\r\n      // console.log( item, loaded, total );\r\n      console.log(item.loaded / item.total * 100 + '%');\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n    \r\n    \r\n    loader.load(panFlipUrl, (object) => {\r\n      const mixer = new THREE.AnimationMixer( panA );\r\n      // console.log(object.animations);\r\n      object.animations[ 0 ][\"tracks\"][0][\"name\"] = \"Meat_A.position\";\r\n      object.animations[ 0 ][\"tracks\"][1][\"name\"] = \"Meat_A.quaternion\";\r\n      const action = mixer.clipAction( object.animations[ 0 ] );\r\n      action.loop = THREE.LoopOnce;\r\n      action.clampWhenFinished = true;\r\n      // action.play();\r\n      mixer.addEventListener('finished', () => {\r\n        setPlayingSteps((prevPlayingSteps) => {\r\n          return prevPlayingSteps + 1;\r\n        })\r\n      })\r\n      object.traverse( function ( child ) {\r\n        if ( child.isMesh ) {\r\n          child.castShadow = true;\r\n          child.receiveShadow = true;\r\n        }\r\n      });\r\n      // addShadowToChild(object, scene);\r\n      // scene.add(object);\r\n      setActions((prevActions) => {\r\n        return [\r\n          ...prevActions,\r\n          action\r\n        ]\r\n      })\r\n      setMixers((prevMixers) => {\r\n        return [\r\n          ...prevMixers,\r\n          mixer\r\n        ]\r\n      })\r\n      // camera.lookAt(object);\r\n      // setThreeObjects((prevThreeObjects) => {\r\n      //   return {\r\n      //     ...prevThreeObjects,\r\n      //     mixer: mixer,\r\n      //     action: action,\r\n      //   }\r\n      // })\r\n    }, (item) => {\r\n      // console.log( item, loaded, total );\r\n      console.log(item.loaded / item.total * 100 + '%');\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n    \r\n  }\r\n  const update = () => {\r\n\r\n    // animationFrame = threeObjects.renderer.setAnimationLoop(() => {\r\n    //   if (mixers) {\r\n    //     const delta = 1 / 30;\r\n    //     mixers.forEach(mixer => mixer.update(delta));\r\n    //   }\r\n    //   // threeObjects.orbitControl.update();\r\n    //   // mac seems too lag for the sao pass rendering\r\n    //   // threeObjects.composer.render();\r\n    //   threeObjects.renderer.render( threeObjects.scene, threeObjects.camera );\r\n    // })\r\n    // animationFrame = setTimeout(() => update(), 1000 / 30);\r\n    animationFrame = requestAnimationFrame(update);\r\n    if (mixers) {\r\n      const delta = threeObjects.clock.getDelta();\r\n      mixers.forEach(mixer => mixer.update(delta));\r\n      // setAnimatePan((prevAnimatePan) => {\r\n      //   return prevAnimatePan - 1;\r\n      // });\r\n    }\r\n    threeObjects.orbitControl.update();\r\n    // mac seems too lag for the sao pass rendering\r\n    // threeObjects.composer.render();\r\n    threeObjects.renderer.render( threeObjects.scene, threeObjects.camera );\r\n  };\r\n  useEffect(() => {\r\n    initScene();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (animationFrame)\r\n      cancelAnimationFrame(animationFrame);\r\n      // clearTimeout(animationFrame);\r\n    // console.log(threeObjects);\r\n    if (threeObjects.scene) {\r\n      // animationFrame = setTimeout(() => update(), 1000 / 30);//update();\r\n      update();\r\n    }\r\n    // console.log(threeObjects.mixer);\r\n    return () => {\r\n      if (animationFrame)\r\n        cancelAnimationFrame(animationFrame);\r\n        // clearTimeout(animationFrame);\r\n    }\r\n  }, [threeObjects, mixers]);\r\n\r\n  useEffect(() => {\r\n    if (roomLoaded) {\r\n      loadPan();\r\n    }\r\n  }, [roomLoaded])\r\n\r\n  useEffect(() => {\r\n    if (actions.length === 2 && playingSteps > 0) {\r\n      if (playingSteps % 2 === 0) {\r\n        actions[0].stop();\r\n        actions[1].reset().play();\r\n        const meat = roomLoaded.children\r\n          .find(child => child.name === \"frying_pan_A\").children\r\n          .find(child => child.name === \"Meat_A\");\r\n        const meatStep = playingSteps % 6;\r\n        if (meatStep === 2) {\r\n          meat.material.map = textureLoaded[1];\r\n        } else if (meatStep === 4) {\r\n          meat.material.map = textureLoaded[2];\r\n        } else if (meatStep === 0) {\r\n          meat.material.map = textureLoaded[0];\r\n        }\r\n      } else {\r\n        actions[1].stop();\r\n        actions[0].reset().play();\r\n      }\r\n    }\r\n  }, [playingSteps, actions])\r\n\r\n  return <>\r\n    {/* <UseDeviceMotion onShake={doPanAnimation} /> */}\r\n    <div ref={setContainerEl}\r\n      // onClick={doPanAnimation}\r\n      className=\"threeCanvas\"\r\n      style={{\r\n        height: '100vh',\r\n      }}\r\n    />\r\n  </>;\r\n}\r\n\r\nexport default App;\r\n","/* three-orbitcontrols addendum */\r\nvar THREE = require('three');\r\n/**\r\n * @author qiao / https://github.com/qiao\r\n * @author mrdoob / http://mrdoob.com\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author erich666 / http://erichaines.com\r\n */\r\n// This set of controls performs orbiting, dollying (zooming), and panning.\r\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\r\n//\r\n//    Orbit - left mouse / touch: one-finger move\r\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\r\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\r\n\r\n\r\nTHREE.OrbitControls = function (object, domElement) {\r\n  this.object = object;\r\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\r\n\r\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\r\n\r\n  this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\r\n\r\n  this.minDistance = 0;\r\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\r\n\r\n  this.minZoom = 0;\r\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\r\n  // Range is 0 to Math.PI radians.\r\n\r\n  this.minPolarAngle = 0; // radians\r\n\r\n  this.maxPolarAngle = Math.PI; // radians\r\n  // How far you can orbit horizontally, upper and lower limits.\r\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\r\n\r\n  this.minAzimuthAngle = -Infinity; // radians\r\n\r\n  this.maxAzimuthAngle = Infinity; // radians\r\n  // Set to true to enable damping (inertia)\r\n  // If damping is enabled, you must call controls.update() in your animation loop\r\n\r\n  this.enableDamping = false;\r\n  this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\r\n  // Set to false to disable zooming\r\n\r\n  this.enableZoom = true;\r\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\r\n\r\n  this.enableRotate = true;\r\n  this.rotateSpeed = 1.0; // Set to false to disable panning\r\n\r\n  this.enablePan = true;\r\n  this.panSpeed = 1.0;\r\n  this.screenSpacePanning = false; // if true, pan in screen-space\r\n\r\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\r\n  // Set to true to automatically rotate around the target\r\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\r\n\r\n  this.autoRotate = false;\r\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\r\n  // Set to false to disable use of the keys\r\n\r\n  this.enableKeys = true; // The four arrow keys\r\n\r\n  this.keys = {\r\n    LEFT: 37,\r\n    UP: 38,\r\n    RIGHT: 39,\r\n    BOTTOM: 40\r\n  }; // Mouse buttons\r\n\r\n  this.mouseButtons = {\r\n    LEFT: THREE.MOUSE.LEFT,\r\n    MIDDLE: THREE.MOUSE.MIDDLE,\r\n    RIGHT: THREE.MOUSE.RIGHT\r\n  }; // for reset\r\n\r\n  this.target0 = this.target.clone();\r\n  this.position0 = this.object.position.clone();\r\n  this.zoom0 = this.object.zoom; //\r\n  // public methods\r\n  //\r\n\r\n  this.getPolarAngle = function () {\r\n    return spherical.phi;\r\n  };\r\n\r\n  this.getAzimuthalAngle = function () {\r\n    return spherical.theta;\r\n  };\r\n\r\n  this.saveState = function () {\r\n    scope.target0.copy(scope.target);\r\n    scope.position0.copy(scope.object.position);\r\n    scope.zoom0 = scope.object.zoom;\r\n  };\r\n\r\n  this.reset = function () {\r\n    scope.target.copy(scope.target0);\r\n    scope.object.position.copy(scope.position0);\r\n    scope.object.zoom = scope.zoom0;\r\n    scope.object.updateProjectionMatrix();\r\n    scope.dispatchEvent(changeEvent);\r\n    scope.update();\r\n    state = STATE.NONE;\r\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\r\n\r\n\r\n  this.update = function () {\r\n    var offset = new THREE.Vector3(); // so camera.up is the orbit axis\r\n\r\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\r\n    var quatInverse = quat.clone().inverse();\r\n    var lastPosition = new THREE.Vector3();\r\n    var lastQuaternion = new THREE.Quaternion();\r\n    return function update() {\r\n      var position = scope.object.position;\r\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\r\n\r\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\r\n\r\n      spherical.setFromVector3(offset);\r\n\r\n      if (scope.autoRotate && state === STATE.NONE) {\r\n        rotateLeft(getAutoRotationAngle());\r\n      }\r\n\r\n      spherical.theta += sphericalDelta.theta;\r\n      spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\r\n\r\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\r\n\r\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\r\n      spherical.makeSafe();\r\n      spherical.radius *= scale; // restrict radius to be between desired limits\r\n\r\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\r\n\r\n      scope.target.add(panOffset);\r\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\r\n\r\n      offset.applyQuaternion(quatInverse);\r\n      position.copy(scope.target).add(offset);\r\n      scope.object.lookAt(scope.target);\r\n\r\n      if (scope.enableDamping === true) {\r\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\r\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\r\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\r\n      } else {\r\n        sphericalDelta.set(0, 0, 0);\r\n        panOffset.set(0, 0, 0);\r\n      }\r\n\r\n      scale = 1; // update condition is:\r\n      // min(camera displacement, camera rotation in radians)^2 > EPS\r\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\r\n\r\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\r\n        scope.dispatchEvent(changeEvent);\r\n        lastPosition.copy(scope.object.position);\r\n        lastQuaternion.copy(scope.object.quaternion);\r\n        zoomChanged = false;\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n  }();\r\n\r\n  this.dispose = function () {\r\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\r\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\r\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\r\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\r\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\r\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\r\n    document.removeEventListener('mousemove', onMouseMove, false);\r\n    document.removeEventListener('mouseup', onMouseUp, false);\r\n    window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\r\n  }; //\r\n  // internals\r\n  //\r\n\r\n\r\n  var scope = this;\r\n  var changeEvent = {\r\n    type: 'change'\r\n  };\r\n  var startEvent = {\r\n    type: 'start'\r\n  };\r\n  var endEvent = {\r\n    type: 'end'\r\n  };\r\n  var STATE = {\r\n    NONE: -1,\r\n    ROTATE: 0,\r\n    DOLLY: 1,\r\n    PAN: 2,\r\n    TOUCH_ROTATE: 3,\r\n    TOUCH_DOLLY_PAN: 4\r\n  };\r\n  var state = STATE.NONE;\r\n  var EPS = 0.000001; // current position in spherical coordinates\r\n\r\n  var spherical = new THREE.Spherical();\r\n  var sphericalDelta = new THREE.Spherical();\r\n  var scale = 1;\r\n  var panOffset = new THREE.Vector3();\r\n  var zoomChanged = false;\r\n  var rotateStart = new THREE.Vector2();\r\n  var rotateEnd = new THREE.Vector2();\r\n  var rotateDelta = new THREE.Vector2();\r\n  var panStart = new THREE.Vector2();\r\n  var panEnd = new THREE.Vector2();\r\n  var panDelta = new THREE.Vector2();\r\n  var dollyStart = new THREE.Vector2();\r\n  var dollyEnd = new THREE.Vector2();\r\n  var dollyDelta = new THREE.Vector2();\r\n\r\n  function getAutoRotationAngle() {\r\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\r\n  }\r\n\r\n  function getZoomScale() {\r\n    return Math.pow(0.95, scope.zoomSpeed);\r\n  }\r\n\r\n  function rotateLeft(angle) {\r\n    sphericalDelta.theta -= angle;\r\n  }\r\n\r\n  function rotateUp(angle) {\r\n    sphericalDelta.phi -= angle;\r\n  }\r\n\r\n  var panLeft = function () {\r\n    var v = new THREE.Vector3();\r\n    return function panLeft(distance, objectMatrix) {\r\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\r\n\r\n      v.multiplyScalar(-distance);\r\n      panOffset.add(v);\r\n    };\r\n  }();\r\n\r\n  var panUp = function () {\r\n    var v = new THREE.Vector3();\r\n    return function panUp(distance, objectMatrix) {\r\n      if (scope.screenSpacePanning === true) {\r\n        v.setFromMatrixColumn(objectMatrix, 1);\r\n      } else {\r\n        v.setFromMatrixColumn(objectMatrix, 0);\r\n        v.crossVectors(scope.object.up, v);\r\n      }\r\n\r\n      v.multiplyScalar(distance);\r\n      panOffset.add(v);\r\n    };\r\n  }(); // deltaX and deltaY are in pixels; right and down are positive\r\n\r\n\r\n  var pan = function () {\r\n    var offset = new THREE.Vector3();\r\n    return function pan(deltaX, deltaY) {\r\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n\r\n      if (scope.object.isPerspectiveCamera) {\r\n        // perspective\r\n        var position = scope.object.position;\r\n        offset.copy(position).sub(scope.target);\r\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\r\n\r\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\r\n\r\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\r\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\r\n      } else if (scope.object.isOrthographicCamera) {\r\n        // orthographic\r\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\r\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\r\n      } else {\r\n        // camera neither orthographic nor perspective\r\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\r\n        scope.enablePan = false;\r\n      }\r\n    };\r\n  }();\r\n\r\n  function dollyIn(dollyScale) {\r\n    if (scope.object.isPerspectiveCamera) {\r\n      scale /= dollyScale;\r\n    } else if (scope.object.isOrthographicCamera) {\r\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\r\n      scope.object.updateProjectionMatrix();\r\n      zoomChanged = true;\r\n    } else {\r\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\r\n      scope.enableZoom = false;\r\n    }\r\n  }\r\n\r\n  function dollyOut(dollyScale) {\r\n    if (scope.object.isPerspectiveCamera) {\r\n      scale *= dollyScale;\r\n    } else if (scope.object.isOrthographicCamera) {\r\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\r\n      scope.object.updateProjectionMatrix();\r\n      zoomChanged = true;\r\n    } else {\r\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\r\n      scope.enableZoom = false;\r\n    }\r\n  } //\r\n  // event callbacks - update the object state\r\n  //\r\n\r\n\r\n  function handleMouseDownRotate(event) {\r\n    //console.log( 'handleMouseDownRotate' );\r\n    rotateStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseDownDolly(event) {\r\n    //console.log( 'handleMouseDownDolly' );\r\n    dollyStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseDownPan(event) {\r\n    //console.log( 'handleMouseDownPan' );\r\n    panStart.set(event.clientX, event.clientY);\r\n  }\r\n\r\n  function handleMouseMoveRotate(event) {\r\n    //console.log( 'handleMouseMoveRotate' );\r\n    rotateEnd.set(event.clientX, event.clientY);\r\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\r\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\r\n\r\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\r\n    rotateStart.copy(rotateEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseMoveDolly(event) {\r\n    //console.log( 'handleMouseMoveDolly' );\r\n    dollyEnd.set(event.clientX, event.clientY);\r\n    dollyDelta.subVectors(dollyEnd, dollyStart);\r\n\r\n    if (dollyDelta.y > 0) {\r\n      dollyIn(getZoomScale());\r\n    } else if (dollyDelta.y < 0) {\r\n      dollyOut(getZoomScale());\r\n    }\r\n\r\n    dollyStart.copy(dollyEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseMovePan(event) {\r\n    //console.log( 'handleMouseMovePan' );\r\n    panEnd.set(event.clientX, event.clientY);\r\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\r\n    pan(panDelta.x, panDelta.y);\r\n    panStart.copy(panEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleMouseUp(event) {// console.log( 'handleMouseUp' );\r\n  }\r\n\r\n  function handleMouseWheel(event) {\r\n    // console.log( 'handleMouseWheel' );\r\n    if (event.deltaY < 0) {\r\n      dollyOut(getZoomScale());\r\n    } else if (event.deltaY > 0) {\r\n      dollyIn(getZoomScale());\r\n    }\r\n\r\n    scope.update();\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    // console.log( 'handleKeyDown' );\r\n    var needsUpdate = false;\r\n\r\n    switch (event.keyCode) {\r\n      case scope.keys.UP:\r\n        pan(0, scope.keyPanSpeed);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.BOTTOM:\r\n        pan(0, -scope.keyPanSpeed);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.LEFT:\r\n        pan(scope.keyPanSpeed, 0);\r\n        needsUpdate = true;\r\n        break;\r\n\r\n      case scope.keys.RIGHT:\r\n        pan(-scope.keyPanSpeed, 0);\r\n        needsUpdate = true;\r\n        break;\r\n    }\r\n\r\n    if (needsUpdate) {\r\n      // prevent the browser from scrolling on cursor keys\r\n      event.preventDefault();\r\n      scope.update();\r\n    }\r\n  }\r\n\r\n  function handleTouchStartRotate(event) {\r\n    //console.log( 'handleTouchStartRotate' );\r\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\r\n  }\r\n\r\n  function handleTouchStartDollyPan(event) {\r\n    //console.log( 'handleTouchStartDollyPan' );\r\n    if (scope.enableZoom) {\r\n      var dx = event.touches[0].pageX; // - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY; // - event.touches[1].pageY;\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n      dollyStart.set(0, distance);\r\n    }\r\n\r\n    if (scope.enablePan) {\r\n      var x = 0.5 * (event.touches[0].pageX); // + event.touches[1].pageX);\r\n      var y = 0.5 * (event.touches[0].pageY); // + event.touches[1].pageY);\r\n      panStart.set(x, y);\r\n    }\r\n  }\r\n\r\n  function handleTouchMoveRotate(event) {\r\n    //console.log( 'handleTouchMoveRotate' );\r\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\r\n    rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\r\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\r\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\r\n\r\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\r\n    rotateStart.copy(rotateEnd);\r\n    scope.update();\r\n  }\r\n\r\n  function handleTouchMoveDollyPan(event) {\r\n    //console.log( 'handleTouchMoveDollyPan' );\r\n    if (scope.enableZoom) {\r\n      var dx = event.touches[0].pageX; // - event.touches[1].pageX;\r\n      var dy = event.touches[0].pageY; // - event.touches[1].pageY;\r\n      var distance = Math.sqrt(dx * dx + dy * dy);\r\n      dollyEnd.set(0, distance);\r\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\r\n      dollyIn(dollyDelta.y);\r\n      dollyStart.copy(dollyEnd);\r\n    }\r\n\r\n    if (scope.enablePan) {\r\n      var x = 0.5 * (event.touches[0].pageX); // + event.touches[1].pageX);\r\n      var y = 0.5 * (event.touches[0].pageY); // + event.touches[1].pageY);\r\n      panEnd.set(x, y);\r\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\r\n      pan(panDelta.x, panDelta.y);\r\n      panStart.copy(panEnd);\r\n    }\r\n\r\n    scope.update();\r\n  }\r\n\r\n  function handleTouchEnd(event) {} //console.log( 'handleTouchEnd' );\r\n  //\r\n  // event handlers - FSM: listen for events and reset state\r\n  //\r\n\r\n\r\n  function onMouseDown(event) {\r\n    if (scope.enabled === false) return; // Prevent the browser from scrolling.\r\n\r\n    event.preventDefault(); // Manually set the focus since calling preventDefault above\r\n    // prevents the browser from setting it automatically.\r\n\r\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\r\n\r\n    switch (event.button) {\r\n      case scope.mouseButtons.LEFT:\r\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\r\n          if (scope.enablePan === false) return;\r\n          handleMouseDownPan(event);\r\n          state = STATE.PAN;\r\n        } else {\r\n          if (scope.enableRotate === false) return;\r\n          handleMouseDownRotate(event);\r\n          state = STATE.ROTATE;\r\n        }\r\n\r\n        break;\r\n\r\n      case scope.mouseButtons.MIDDLE:\r\n        if (scope.enableZoom === false) return;\r\n        handleMouseDownDolly(event);\r\n        state = STATE.DOLLY;\r\n        break;\r\n\r\n      case scope.mouseButtons.RIGHT:\r\n        if (scope.enablePan === false) return;\r\n        handleMouseDownPan(event);\r\n        state = STATE.PAN;\r\n        break;\r\n    }\r\n\r\n    if (state !== STATE.NONE) {\r\n      document.addEventListener('mousemove', onMouseMove, false);\r\n      document.addEventListener('mouseup', onMouseUp, false);\r\n      scope.dispatchEvent(startEvent);\r\n    }\r\n  }\r\n\r\n  function onMouseMove(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n\r\n    switch (state) {\r\n      case STATE.ROTATE:\r\n        if (scope.enableRotate === false) return;\r\n        handleMouseMoveRotate(event);\r\n        break;\r\n\r\n      case STATE.DOLLY:\r\n        if (scope.enableZoom === false) return;\r\n        handleMouseMoveDolly(event);\r\n        break;\r\n\r\n      case STATE.PAN:\r\n        if (scope.enablePan === false) return;\r\n        handleMouseMovePan(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function onMouseUp(event) {\r\n    if (scope.enabled === false) return;\r\n    handleMouseUp(event);\r\n    document.removeEventListener('mousemove', onMouseMove, false);\r\n    document.removeEventListener('mouseup', onMouseUp, false);\r\n    scope.dispatchEvent(endEvent);\r\n    state = STATE.NONE;\r\n  }\r\n\r\n  function onMouseWheel(event) {\r\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    scope.dispatchEvent(startEvent);\r\n    handleMouseWheel(event);\r\n    scope.dispatchEvent(endEvent);\r\n  }\r\n\r\n  function onKeyDown(event) {\r\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\r\n    handleKeyDown(event);\r\n  }\r\n\r\n  function onTouchStart(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n\r\n    switch (event.touches.length) {\r\n      case 2:\r\n        // two-fingered touch: rotate\r\n        if (scope.enableRotate === false) return;\r\n        handleTouchStartRotate(event);\r\n        state = STATE.TOUCH_ROTATE;\r\n        break;\r\n\r\n      case 1:\r\n        // one-fingered touch: dolly-pan\r\n        if (scope.enableZoom === false && scope.enablePan === false) return;\r\n        handleTouchStartDollyPan(event);\r\n        state = STATE.TOUCH_DOLLY_PAN;\r\n        break;\r\n\r\n      default:\r\n        state = STATE.NONE;\r\n    }\r\n\r\n    if (state !== STATE.NONE) {\r\n      scope.dispatchEvent(startEvent);\r\n    }\r\n  }\r\n\r\n  function onTouchMove(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    switch (event.touches.length) {\r\n      case 2:\r\n        // two-fingered touch: rotate\r\n        if (scope.enableRotate === false) return;\r\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\r\n\r\n        handleTouchMoveRotate(event);\r\n        break;\r\n\r\n      case 1:\r\n        // one-fingered touch: dolly-pan\r\n        if (scope.enableZoom === false && scope.enablePan === false) return;\r\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\r\n\r\n        handleTouchMoveDollyPan(event);\r\n        break;\r\n\r\n      default:\r\n        state = STATE.NONE;\r\n    }\r\n  }\r\n\r\n  function onTouchEnd(event) {\r\n    if (scope.enabled === false) return;\r\n    handleTouchEnd(event);\r\n    scope.dispatchEvent(endEvent);\r\n    state = STATE.NONE;\r\n  }\r\n\r\n  function onContextMenu(event) {\r\n    if (scope.enabled === false) return;\r\n    event.preventDefault();\r\n  } //\r\n\r\n\r\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\r\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\r\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\r\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\r\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\r\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\r\n  window.addEventListener('keydown', onKeyDown, false); // force an update at start\r\n\r\n  this.update();\r\n};\r\n\r\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\r\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\r\nObject.defineProperties(THREE.OrbitControls.prototype, {\r\n  center: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\r\n      return this.target;\r\n    }\r\n  },\r\n  // backward compatibility\r\n  noZoom: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\r\n      return !this.enableZoom;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\r\n      this.enableZoom = !value;\r\n    }\r\n  },\r\n  noRotate: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\r\n      return !this.enableRotate;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\r\n      this.enableRotate = !value;\r\n    }\r\n  },\r\n  noPan: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\r\n      return !this.enablePan;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\r\n      this.enablePan = !value;\r\n    }\r\n  },\r\n  noKeys: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\r\n      return !this.enableKeys;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\r\n      this.enableKeys = !value;\r\n    }\r\n  },\r\n  staticMoving: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\r\n      return !this.enableDamping;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\r\n      this.enableDamping = !value;\r\n    }\r\n  },\r\n  dynamicDampingFactor: {\r\n    get: function () {\r\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\r\n      return this.dampingFactor;\r\n    },\r\n    set: function (value) {\r\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\r\n      this.dampingFactor = value;\r\n    }\r\n  }\r\n});\r\n/* three-orbitcontrols addendum */\r\n\r\nmodule.exports = exports.default = THREE.OrbitControls;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}"],"sourceRoot":""}