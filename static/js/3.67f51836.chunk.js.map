{"version":3,"sources":["pages/joinGame.js","components/useDeviceMotion.js","globals/config.js"],"names":["App","props","_useState","useState","_useState2","Object","D_Documents_Projects_React_playground_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","socket","setSocket","useEffect","serverUrl","concat","serverPath","serverPort","io","on","console","log","emit","match","params","userId","msg","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_useDeviceMotion__WEBPACK_IMPORTED_MODULE_4__","onShake","UseDeviceMotion","threshold","setThreshold","_useState3","_useState4","lastAccVec3","setLastAccVec3","_useState5","_useState6","moveCounter","setMoveCounter","onMotion","useCallback","event","alpha","beta","gamma","deltaX","Math","abs","deltaY","deltaZ","prevMoveCounter","max","window","addEventListener","removeEventListener","__webpack_require__","d","__webpack_exports__"],"mappings":"6JA2DeA,UAnDH,SAACC,GAAU,IAAAC,EACOC,mBAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACNI,EADMJ,EAAA,GAKrBK,oBAAU,WAIR,IAAMC,EAAS,GAAAC,OAAMC,IAAN,KAAAD,OAAoBE,KAC7BN,EAASO,IAAGJ,GAElB,OADAF,EAAUD,GACH,cAGN,IAEHE,oBAAU,WACJF,IACFA,EAAOQ,GAAG,UAAW,WACnBC,QAAQC,IAAI,eACZV,EAAOW,KAAK,WAAYjB,EAAMkB,MAAMA,MAAMC,OAAOC,UAEnDd,EAAOQ,GAAG,iBAAkB,SAACO,GAE3BN,QAAQC,IAAI,oBAAqBK,KAGnCf,EAAOQ,GAAG,cAAe,SAACO,MAI1Bf,EAAOQ,GAAG,IAAK,SAACO,GACdN,QAAQC,IAAIK,OAGf,CAACf,EAAQN,EAAMkB,MAAMA,MAAMC,OAAOC,SAMrC,OAAOE,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAiBC,QANH,WAEdpB,EAAOW,KAAK,YAGP,aAILK,EAAAC,EAAAC,cAAA,WAJK,8FC+BMG,IA5ES,SAAC3B,GAAU,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1B2B,EAD0BzB,EAAA,GACf0B,EADe1B,EAAA,GAAA2B,EAEK5B,mBAAS,CAAC,KAAM,KAAM,OAF3B6B,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GAE1BE,EAF0BD,EAAA,GAEbE,EAFaF,EAAA,GAAAG,EAGKhC,mBAAS,GAHdiC,EAAA/B,OAAAC,EAAA,EAAAD,CAAA8B,EAAA,GAG1BE,EAH0BD,EAAA,GAGbE,EAHaF,EAAA,GAM3BG,EAAWC,sBACf,SAACC,GAAU,IAIFC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MAQpB,GAAMF,GAASC,GAAQC,EAAvB,CACA,IAAIC,EAASC,KAAKC,IAAIL,EAAQT,EAAY,IACtCe,EAASF,KAAKC,IAAIJ,EAAOV,EAAY,IACrCgB,EAASH,KAAKC,IAAIH,EAAQX,EAAY,IAGxCK,EADCO,EAASG,EAASC,EAASpB,EACb,SAACqB,GACd,OAAOA,EAAkB,GAGZ,SAACA,GACd,OAAOJ,KAAKK,IAAI,EAAGD,EAAkB,KAGzChB,EAAe,CAACQ,EAAOC,EAAMC,MAE/B,CAACf,EAAWI,IAsCd,OApCAxB,oBAAU,WAIR,OAHIR,EAAM4B,WACRC,EAAa7B,EAAM4B,WAEd,cAGN,CAAC5B,EAAM4B,YAEVpB,oBAAU,WAGR,OAFA2C,OAAOC,iBAAiB,oBAAqBd,GAAU,GAEhD,WACLa,OAAOE,oBAAoB,oBAAqBf,GAAU,KAG3D,CAACA,IAEJ9B,oBAAU,WACL4B,EAAc,IACfrB,QAAQC,IAAI,YAIRhB,EAAM0B,SAAqC,oBAAnB1B,EAAM0B,SAChC1B,EAAM0B,UAEXW,EAAe,KAEb,CAACD,EAAapC,IAOVsB,EAAAC,EAAAC,cAAA,8CC9ET8B,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA2C,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA,IAAMD,EAAa,yCACbC,EAAa","file":"static/js/3.67f51836.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport {serverPath, serverPort} from 'globals/config';\r\n\r\nimport UseDeviceMotion from 'components/useDeviceMotion';\r\n\r\nconst App = (props) => {\r\n  const [socket, setSocket] = useState(null);\r\n  // const [playersInfo, setPlayersInfo] = useState([]);\r\n  // const [shakeCount, setShakeCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // const serverPath = 'http://localhost';\r\n    // get the ip and port from ipc\r\n    // const socket = io(window.location.origin);\r\n    const serverUrl = `${serverPath}:${serverPort}`;\r\n    const socket = io(serverUrl);\r\n    setSocket(socket);\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on('connect', () => {\r\n        console.log('connected !');\r\n        socket.emit('joinRoom', props.match.match.params.userId);\r\n      });\r\n      socket.on('joinRoomStatus', (msg) => {\r\n        // display fail msg if cannot join any room\r\n        console.log('joinRoom status: ', msg);\r\n      });\r\n      // TODO: need to wait a start game signal !!\r\n      socket.on('gameStarted', (msg) => {\r\n        // display start shake msg\r\n        // and shake available now\r\n      });\r\n      socket.on('*', (msg) => {\r\n        console.log(msg);\r\n      })\r\n    }\r\n  }, [socket, props.match.match.params.userId]);\r\n  const onShake = () => {\r\n    /* send signal to server */\r\n    socket.emit('shake');\r\n    // do some animation?\r\n  }\r\n  return <div>\r\n    <UseDeviceMotion onShake={onShake} />\r\n    Join Game!\r\n    {/* JSON.stringify(props) */}\r\n    <br />\r\n    Shake it!\r\n  </div>;\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport {useState, useEffect, useCallback} from 'react';\r\n\r\n\r\n// https://www.raymondcamden.com/2017/04/25/using-device-motion-on-the-web\r\nconst UseDeviceMotion = (props) => {\r\n  const [threshold, setThreshold] = useState(45);\r\n  const [lastAccVec3, setLastAccVec3] = useState([null, null, null]);\r\n  const [moveCounter, setMoveCounter] = useState(0);\r\n  // const [shakeCounter, setShakeCounter] = useState(0);\r\n  \r\n  const onMotion = useCallback(\r\n    (event) => {\r\n      // event.alpha\r\n      // event.beta\r\n      // event.gamma\r\n      const {alpha, beta, gamma} = event;\r\n      //console.log('motion', acc);\r\n      // if (lastAccVec3[0] === null) {\r\n      //   setLastAccVec3([alpha, beta, gamma]);\r\n      //   return;\r\n      // }\r\n      // dunno why there exist some wrong result\r\n      //  - alpha, bata, gamma all zero randomly\r\n      if (!(alpha && beta && gamma)) { return; }\r\n      let deltaX = Math.abs(alpha - lastAccVec3[0]);\r\n      let deltaY = Math.abs(beta - lastAccVec3[1]);\r\n      let deltaZ = Math.abs(gamma - lastAccVec3[2]);\r\n    \r\n      if(deltaX + deltaY + deltaZ > threshold) {\r\n        setMoveCounter((prevMoveCounter) => {\r\n          return prevMoveCounter + 1;\r\n        })\r\n      } else {\r\n        setMoveCounter((prevMoveCounter) => {\r\n          return Math.max(0, prevMoveCounter - 1);\r\n        })\r\n      }\r\n      setLastAccVec3([alpha, beta, gamma]);\r\n    },\r\n    [threshold, lastAccVec3]\r\n  );\r\n  useEffect(() => {\r\n    if (props.threshold) {\r\n      setThreshold(props.threshold);\r\n    }\r\n    return () => {\r\n\r\n    }\r\n  }, [props.threshold])\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('deviceorientation', onMotion, false);\r\n    // console.log('addEventListener deviceorientation');\r\n    return () => {\r\n      window.removeEventListener('deviceorientation', onMotion, false);\r\n      // console.log('removeEventListener deviceorientation');\r\n    }\r\n  }, [onMotion])\r\n\r\n  useEffect(() => {\r\n    if(moveCounter > 2) {\r\n      console.log('SHAKE!!!');\r\n      // setShakeCounter((prevShakeCounter => {\r\n      //   return prevShakeCounter + 1;\r\n      // }));\r\n      if (props.onShake && typeof(props.onShake) === 'function') {\r\n        props.onShake();\r\n      }\r\n\t\t\tsetMoveCounter(0);\r\n\t\t}\r\n  }, [moveCounter, props]);\r\n\r\n  // return <div>\r\n  //   {lastAccVec3.map(v => v + ', ')}\r\n  // </div>;\r\n\r\n  // return shakeCounter;\r\n  return <div />;\r\n}\r\n\r\nexport default UseDeviceMotion;","const serverPath = 'https://socketio-testing.herokuapp.com';\r\nconst serverPort = 443;\r\n\r\nexport {\r\n  serverPath,\r\n  serverPort\r\n};"],"sourceRoot":""}